name: Deploy Tudu API

on:
  push:
    branches: [main, master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Build application
        run: |
          npm ci
          npm run build
          ls -la dist/ # Verifique se o build foi gerado

      - name: Create deployment package
        run: |
          tar -czvf deploy.tar.gz \
            dist/ \
            package.json \
            package-lock.json \
            ecosystem.config.js \
            prisma/

          # Verificação crítica
          if ! tar -tzf deploy.tar.gz | grep -q ecosystem.config.js; then
            echo "::error::❌ Arquivos essenciais faltando no pacote!"
            exit 1
          fi

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key

          cat > ~/.ssh/config <<EOF
          Host tudu-server
            HostName ${{ secrets.SSH_HOST }}
            User ${{ secrets.SSH_USER }}
            IdentityFile ~/.ssh/deploy_key
            StrictHostKeyChecking no
          EOF

      - name: Deploy to server
        run: |
          scp -i ~/.ssh/deploy_key deploy.tar.gz tudu-server:/tmp/

          ssh -i ~/.ssh/deploy_key tudu-server "
            set -e
            echo '--> Limpando diretório...'
            rm -rf /var/www/tudu-api/*
            
            echo '--> Extraindo arquivos...'
            tar -xzf /tmp/deploy.tar.gz -C /var/www/tudu-api
            
            echo '--> Configurando ambiente...'
            cd /var/www/tudu-api
            echo \"DATABASE_URL='${{ secrets.DATABASE_URL }}'\" > .env
            echo \"JWT_SECRET='${{ secrets.JWT_SECRET }}'\" >> .env
            echo \"NODE_ENV=production\" >> .env
            
            echo '--> Instalando dependências...'
            npm ci --production
            
            echo '--> Executando migrações...'
            npx prisma generate
            npx prisma migrate deploy
            
            echo '--> Reiniciando PM2...'
            pm2 delete tudu-api || true
            pm2 start ecosystem.config.js
            pm2 save
          "
