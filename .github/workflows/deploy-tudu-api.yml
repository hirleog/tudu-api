name: Deploy Tudu API (Production)

on:
  push:
    branches: ['master', 'main']
    paths:
      - 'src/**'
      - 'package.json'
      - 'package-lock.json'
      - 'ecosystem.config.js'
      - '.env*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      # Configuração SSH
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.API_TUDU_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key

          # Config file
          cat <<EOF > ~/.ssh/config
          Host ${{ secrets.SSH_HOST }}
            HostName ${{ secrets.SSH_HOST }}
            User ${{ secrets.SSH_USER }}
            StrictHostKeyChecking no
            IdentityFile ~/.ssh/deploy_key
          EOF

          # Known hosts
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts 2>/dev/null

      # Build da aplicação
      - name: Build application
        run: |
          npm ci
          npm run build
          echo "Build contents:"
          ls -la dist/

      # Deploy
      - name: Transfer files
        run: |
          echo "Preparing files..."
          tar -czf deploy.tar.gz dist/ package.json package-lock.json ecosystem.config.js .env*

          echo "Uploading files..."
          scp -i ~/.ssh/deploy_key \
            deploy.tar.gz \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/tmp/

          echo "Extracting on server..."
          ssh -i ~/.ssh/deploy_key ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            sudo mkdir -p /var/www/tudu-api
            sudo rm -rf /var/www/tudu-api/*
            sudo tar -xzf /tmp/deploy.tar.gz -C /var/www/tudu-api/
            sudo chown -R ${{ secrets.SSH_USER }}:www-data /var/www/tudu-api
            echo 'Deployed files:'
            ls -la /var/www/tudu-api/
          "

      # Server setup
      - name: Configure server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.API_TUDU_SSH_KEY }}
          script: |
            echo "=== Installing dependencies ==="
            cd /var/www/tudu-api
            npm ci --production

            echo "=== Restarting PM2 ==="
            pm2 delete tudu-api || true
            pm2 start ecosystem.config.js
            pm2 save

            echo "=== Final status ==="
            pm2 list
            echo "Deploy completed at $(date)"
