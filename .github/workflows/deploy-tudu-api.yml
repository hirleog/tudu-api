name: Deploy Tudu API (Production)

on:
  push:
    branches: ['master', 'main']

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.API_TUDU_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key

          echo "Host ${{ secrets.SSH_HOST }}" > ~/.ssh/config
          echo "  HostName ${{ secrets.SSH_HOST }}" >> ~/.ssh/config
          echo "  User ${{ secrets.SSH_USER }}" >> ~/.ssh/config
          echo "  IdentityFile ~/.ssh/deploy_key" >> ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config
          echo "  ConnectTimeout 15" >> ~/.ssh/config

          chmod 600 ~/.ssh/config

          # Adicione a fingerprint do seu servidor
          echo "${{ secrets.SSH_HOST }} ssh-ed25519 AAAAC3..." >> ~/.ssh/known_hosts

      - name: Build application
        run: |
          npm ci
          npm run build
          [ -d "dist" ] || { echo "::error::❌ Build failed"; exit 1; }

      - name: Create deployment package
        run: |
          tar -czvf deploy.tar.gz \
            dist/ \
            package.json \
            package-lock.json \
            ecosystem.config.js \
            prisma/
          [ -f "deploy.tar.gz" ] || { echo "::error::❌ Failed to create package"; exit 1; }

      - name: Deploy to server
        run: |
          scp -i ~/.ssh/deploy_key deploy.tar.gz ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/tmp/

          ssh -i ~/.ssh/deploy_key ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            set -eo pipefail
            
            # 1. Cria diretório sem sudo (se possível)
            mkdir -p /var/www/tudu-api || {
              echo '::warning::⚠️ Tentando com sudo...'
              sudo mkdir -p /var/www/tudu-api
            }
            
            # 2. Remove arquivos antigos
            cd /var/www/tudu-api
            sudo rm -rf ./* || {
              echo '::warning::⚠️ Tentando sem sudo...'
              rm -rf ./*
            }
            
            # 3. Extrai arquivos
            sudo tar -xzf /tmp/deploy.tar.gz -C . || {
              echo '::warning::⚠️ Tentando sem sudo...'
              tar -xzf /tmp/deploy.tar.gz -C .
            }
            
            # 4. Ajusta permissões
            sudo chown -R $USER:www-data . || {
              echo '::warning::⚠️ Tentando sem sudo...'
              chown -R $USER:www-data .
            }
            
            # 5. Configura .env
            cat <<EOF > .env
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            NODE_ENV=production
            PORT=3000
            EOF
            chmod 600 .env
            
            # 6. Instala dependências
            npm ci --production
            
            # 7. Executa migrações
            npx prisma generate
            npx prisma migrate deploy
            
            # 8. Inicia aplicação
            pm2 delete tudu-api --silent || true
            pm2 start ecosystem.config.js
            pm2 save
            
            # Verificação final
            echo '=== Status do PM2 ==='
            pm2 list
            echo '=== Health Check ==='
            curl -sSf http://localhost:3000/health || {
              echo '::error::❌ Health check failed'
              exit 1
            }
          "
