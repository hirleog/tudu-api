name: Deploy Tudu API (Production)

on:
  push:
    branches: ['master', 'main']

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4

      # Configuração SSH corrigida
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.API_TUDU_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key

          # Config file simplificado
          echo -e "Host ${{ secrets.SSH_HOST }}\n\tHostName ${{ secrets.SSH_HOST }}\n\tUser ${{ secrets.SSH_USER }}\n\tIdentityFile ~/.ssh/deploy_key\n\tStrictHostKeyChecking no" > ~/.ssh/config

          # ssh-keyscan corrigido (removida a flag problemática)
          ssh-keyscan ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts 2>/dev/null

          # Teste de conexão
          ssh -o BatchMode=yes -o ConnectTimeout=5 ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} exit

      # Build da aplicação
      - name: Build application
        run: |
          npm ci
          npm run build
          ls -la dist/

      # Deploy com tratamento de erros
      - name: Deploy to Server
        run: |
          # Cria pacote com verificação
          {
            echo "dist/"
            [ -f "package.json" ] && echo "package.json"
            [ -f "package-lock.json" ] && echo "package-lock.json"
            [ -f "ecosystem.config.js" ] && echo "ecosystem.config.js"
            [ -f ".env" ] && echo ".env"
            [ -d "prisma" ] && echo "prisma/"
          } | tar -czf deploy.tar.gz -T -

          # Transfere com verificações
          scp -i ~/.ssh/deploy_key deploy.tar.gz ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/tmp/ || exit 1

          # Execução remota com tratamento de erros
          ssh -i ~/.ssh/deploy_key ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            set -e
            echo 'Removing old files...'
            sudo rm -rf /var/www/tudu-api/*
            
            echo 'Extracting files...'
            sudo tar -xzf /tmp/deploy.tar.gz -C /var/www/tudu-api/
            
            echo 'Setting permissions...'
            sudo chown -R ${{ secrets.SSH_USER }}:www-data /var/www/tudu-api
            
            echo 'Installing dependencies...'
            cd /var/www/tudu-api
            npm ci --production
            
            echo 'Running Prisma migrations...'
            npx prisma generate
            npx prisma migrate deploy
            
            echo 'Restarting PM2...'
            pm2 delete tudu-api --silent || true
            pm2 start ecosystem.config.js
            pm2 save
          "
