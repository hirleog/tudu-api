
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Cliente
 * 
 */
export type Cliente = $Result.DefaultSelection<Prisma.$ClientePayload>
/**
 * Model Prestador
 * 
 */
export type Prestador = $Result.DefaultSelection<Prisma.$PrestadorPayload>
/**
 * Model Candidatura
 * 
 */
export type Candidatura = $Result.DefaultSelection<Prisma.$CandidaturaPayload>
/**
 * Model Card
 * 
 */
export type Card = $Result.DefaultSelection<Prisma.$CardPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Clientes
 * const clientes = await prisma.cliente.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Clientes
   * const clientes = await prisma.cliente.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.cliente`: Exposes CRUD operations for the **Cliente** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clientes
    * const clientes = await prisma.cliente.findMany()
    * ```
    */
  get cliente(): Prisma.ClienteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.prestador`: Exposes CRUD operations for the **Prestador** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Prestadors
    * const prestadors = await prisma.prestador.findMany()
    * ```
    */
  get prestador(): Prisma.PrestadorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.candidatura`: Exposes CRUD operations for the **Candidatura** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Candidaturas
    * const candidaturas = await prisma.candidatura.findMany()
    * ```
    */
  get candidatura(): Prisma.CandidaturaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.card`: Exposes CRUD operations for the **Card** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cards
    * const cards = await prisma.card.findMany()
    * ```
    */
  get card(): Prisma.CardDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.6.0
   * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Cliente: 'Cliente',
    Prestador: 'Prestador',
    Candidatura: 'Candidatura',
    Card: 'Card'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "cliente" | "prestador" | "candidatura" | "card"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Cliente: {
        payload: Prisma.$ClientePayload<ExtArgs>
        fields: Prisma.ClienteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClienteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClienteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          findFirst: {
            args: Prisma.ClienteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClienteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          findMany: {
            args: Prisma.ClienteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>[]
          }
          create: {
            args: Prisma.ClienteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          createMany: {
            args: Prisma.ClienteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ClienteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          update: {
            args: Prisma.ClienteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          deleteMany: {
            args: Prisma.ClienteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClienteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ClienteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          aggregate: {
            args: Prisma.ClienteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCliente>
          }
          groupBy: {
            args: Prisma.ClienteGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClienteGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClienteCountArgs<ExtArgs>
            result: $Utils.Optional<ClienteCountAggregateOutputType> | number
          }
        }
      }
      Prestador: {
        payload: Prisma.$PrestadorPayload<ExtArgs>
        fields: Prisma.PrestadorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PrestadorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrestadorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PrestadorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrestadorPayload>
          }
          findFirst: {
            args: Prisma.PrestadorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrestadorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PrestadorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrestadorPayload>
          }
          findMany: {
            args: Prisma.PrestadorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrestadorPayload>[]
          }
          create: {
            args: Prisma.PrestadorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrestadorPayload>
          }
          createMany: {
            args: Prisma.PrestadorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PrestadorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrestadorPayload>
          }
          update: {
            args: Prisma.PrestadorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrestadorPayload>
          }
          deleteMany: {
            args: Prisma.PrestadorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PrestadorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PrestadorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrestadorPayload>
          }
          aggregate: {
            args: Prisma.PrestadorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePrestador>
          }
          groupBy: {
            args: Prisma.PrestadorGroupByArgs<ExtArgs>
            result: $Utils.Optional<PrestadorGroupByOutputType>[]
          }
          count: {
            args: Prisma.PrestadorCountArgs<ExtArgs>
            result: $Utils.Optional<PrestadorCountAggregateOutputType> | number
          }
        }
      }
      Candidatura: {
        payload: Prisma.$CandidaturaPayload<ExtArgs>
        fields: Prisma.CandidaturaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CandidaturaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidaturaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CandidaturaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidaturaPayload>
          }
          findFirst: {
            args: Prisma.CandidaturaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidaturaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CandidaturaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidaturaPayload>
          }
          findMany: {
            args: Prisma.CandidaturaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidaturaPayload>[]
          }
          create: {
            args: Prisma.CandidaturaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidaturaPayload>
          }
          createMany: {
            args: Prisma.CandidaturaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CandidaturaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidaturaPayload>
          }
          update: {
            args: Prisma.CandidaturaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidaturaPayload>
          }
          deleteMany: {
            args: Prisma.CandidaturaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CandidaturaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CandidaturaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidaturaPayload>
          }
          aggregate: {
            args: Prisma.CandidaturaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCandidatura>
          }
          groupBy: {
            args: Prisma.CandidaturaGroupByArgs<ExtArgs>
            result: $Utils.Optional<CandidaturaGroupByOutputType>[]
          }
          count: {
            args: Prisma.CandidaturaCountArgs<ExtArgs>
            result: $Utils.Optional<CandidaturaCountAggregateOutputType> | number
          }
        }
      }
      Card: {
        payload: Prisma.$CardPayload<ExtArgs>
        fields: Prisma.CardFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CardFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CardPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CardFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CardPayload>
          }
          findFirst: {
            args: Prisma.CardFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CardPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CardFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CardPayload>
          }
          findMany: {
            args: Prisma.CardFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CardPayload>[]
          }
          create: {
            args: Prisma.CardCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CardPayload>
          }
          createMany: {
            args: Prisma.CardCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CardDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CardPayload>
          }
          update: {
            args: Prisma.CardUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CardPayload>
          }
          deleteMany: {
            args: Prisma.CardDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CardUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CardUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CardPayload>
          }
          aggregate: {
            args: Prisma.CardAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCard>
          }
          groupBy: {
            args: Prisma.CardGroupByArgs<ExtArgs>
            result: $Utils.Optional<CardGroupByOutputType>[]
          }
          count: {
            args: Prisma.CardCountArgs<ExtArgs>
            result: $Utils.Optional<CardCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    cliente?: ClienteOmit
    prestador?: PrestadorOmit
    candidatura?: CandidaturaOmit
    card?: CardOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type ClienteCountOutputType
   */

  export type ClienteCountOutputType = {
    Card: number
  }

  export type ClienteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Card?: boolean | ClienteCountOutputTypeCountCardArgs
  }

  // Custom InputTypes
  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteCountOutputType
     */
    select?: ClienteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountCardArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CardWhereInput
  }


  /**
   * Count Type PrestadorCountOutputType
   */

  export type PrestadorCountOutputType = {
    Candidatura: number
    Card: number
  }

  export type PrestadorCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Candidatura?: boolean | PrestadorCountOutputTypeCountCandidaturaArgs
    Card?: boolean | PrestadorCountOutputTypeCountCardArgs
  }

  // Custom InputTypes
  /**
   * PrestadorCountOutputType without action
   */
  export type PrestadorCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrestadorCountOutputType
     */
    select?: PrestadorCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PrestadorCountOutputType without action
   */
  export type PrestadorCountOutputTypeCountCandidaturaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CandidaturaWhereInput
  }

  /**
   * PrestadorCountOutputType without action
   */
  export type PrestadorCountOutputTypeCountCardArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CardWhereInput
  }


  /**
   * Count Type CardCountOutputType
   */

  export type CardCountOutputType = {
    Candidatura: number
  }

  export type CardCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Candidatura?: boolean | CardCountOutputTypeCountCandidaturaArgs
  }

  // Custom InputTypes
  /**
   * CardCountOutputType without action
   */
  export type CardCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CardCountOutputType
     */
    select?: CardCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CardCountOutputType without action
   */
  export type CardCountOutputTypeCountCandidaturaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CandidaturaWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Cliente
   */

  export type AggregateCliente = {
    _count: ClienteCountAggregateOutputType | null
    _avg: ClienteAvgAggregateOutputType | null
    _sum: ClienteSumAggregateOutputType | null
    _min: ClienteMinAggregateOutputType | null
    _max: ClienteMaxAggregateOutputType | null
  }

  export type ClienteAvgAggregateOutputType = {
    id_cliente: number | null
  }

  export type ClienteSumAggregateOutputType = {
    id_cliente: number | null
  }

  export type ClienteMinAggregateOutputType = {
    id_cliente: number | null
    telefone: string | null
    nome: string | null
    sobrenome: string | null
    cpf: string | null
    data_nascimento: string | null
    email: string | null
    password: string | null
    endereco_estado: string | null
    endereco_cidade: string | null
    endereco_bairro: string | null
    endereco_rua: string | null
    endereco_numero: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ClienteMaxAggregateOutputType = {
    id_cliente: number | null
    telefone: string | null
    nome: string | null
    sobrenome: string | null
    cpf: string | null
    data_nascimento: string | null
    email: string | null
    password: string | null
    endereco_estado: string | null
    endereco_cidade: string | null
    endereco_bairro: string | null
    endereco_rua: string | null
    endereco_numero: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ClienteCountAggregateOutputType = {
    id_cliente: number
    telefone: number
    nome: number
    sobrenome: number
    cpf: number
    data_nascimento: number
    email: number
    password: number
    endereco_estado: number
    endereco_cidade: number
    endereco_bairro: number
    endereco_rua: number
    endereco_numero: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type ClienteAvgAggregateInputType = {
    id_cliente?: true
  }

  export type ClienteSumAggregateInputType = {
    id_cliente?: true
  }

  export type ClienteMinAggregateInputType = {
    id_cliente?: true
    telefone?: true
    nome?: true
    sobrenome?: true
    cpf?: true
    data_nascimento?: true
    email?: true
    password?: true
    endereco_estado?: true
    endereco_cidade?: true
    endereco_bairro?: true
    endereco_rua?: true
    endereco_numero?: true
    created_at?: true
    updated_at?: true
  }

  export type ClienteMaxAggregateInputType = {
    id_cliente?: true
    telefone?: true
    nome?: true
    sobrenome?: true
    cpf?: true
    data_nascimento?: true
    email?: true
    password?: true
    endereco_estado?: true
    endereco_cidade?: true
    endereco_bairro?: true
    endereco_rua?: true
    endereco_numero?: true
    created_at?: true
    updated_at?: true
  }

  export type ClienteCountAggregateInputType = {
    id_cliente?: true
    telefone?: true
    nome?: true
    sobrenome?: true
    cpf?: true
    data_nascimento?: true
    email?: true
    password?: true
    endereco_estado?: true
    endereco_cidade?: true
    endereco_bairro?: true
    endereco_rua?: true
    endereco_numero?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type ClienteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cliente to aggregate.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Clientes
    **/
    _count?: true | ClienteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClienteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClienteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClienteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClienteMaxAggregateInputType
  }

  export type GetClienteAggregateType<T extends ClienteAggregateArgs> = {
        [P in keyof T & keyof AggregateCliente]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCliente[P]>
      : GetScalarType<T[P], AggregateCliente[P]>
  }




  export type ClienteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClienteWhereInput
    orderBy?: ClienteOrderByWithAggregationInput | ClienteOrderByWithAggregationInput[]
    by: ClienteScalarFieldEnum[] | ClienteScalarFieldEnum
    having?: ClienteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClienteCountAggregateInputType | true
    _avg?: ClienteAvgAggregateInputType
    _sum?: ClienteSumAggregateInputType
    _min?: ClienteMinAggregateInputType
    _max?: ClienteMaxAggregateInputType
  }

  export type ClienteGroupByOutputType = {
    id_cliente: number
    telefone: string | null
    nome: string
    sobrenome: string
    cpf: string | null
    data_nascimento: string | null
    email: string
    password: string
    endereco_estado: string | null
    endereco_cidade: string | null
    endereco_bairro: string | null
    endereco_rua: string | null
    endereco_numero: string | null
    created_at: Date
    updated_at: Date
    _count: ClienteCountAggregateOutputType | null
    _avg: ClienteAvgAggregateOutputType | null
    _sum: ClienteSumAggregateOutputType | null
    _min: ClienteMinAggregateOutputType | null
    _max: ClienteMaxAggregateOutputType | null
  }

  type GetClienteGroupByPayload<T extends ClienteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClienteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClienteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClienteGroupByOutputType[P]>
            : GetScalarType<T[P], ClienteGroupByOutputType[P]>
        }
      >
    >


  export type ClienteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_cliente?: boolean
    telefone?: boolean
    nome?: boolean
    sobrenome?: boolean
    cpf?: boolean
    data_nascimento?: boolean
    email?: boolean
    password?: boolean
    endereco_estado?: boolean
    endereco_cidade?: boolean
    endereco_bairro?: boolean
    endereco_rua?: boolean
    endereco_numero?: boolean
    created_at?: boolean
    updated_at?: boolean
    Card?: boolean | Cliente$CardArgs<ExtArgs>
    _count?: boolean | ClienteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cliente"]>



  export type ClienteSelectScalar = {
    id_cliente?: boolean
    telefone?: boolean
    nome?: boolean
    sobrenome?: boolean
    cpf?: boolean
    data_nascimento?: boolean
    email?: boolean
    password?: boolean
    endereco_estado?: boolean
    endereco_cidade?: boolean
    endereco_bairro?: boolean
    endereco_rua?: boolean
    endereco_numero?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type ClienteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_cliente" | "telefone" | "nome" | "sobrenome" | "cpf" | "data_nascimento" | "email" | "password" | "endereco_estado" | "endereco_cidade" | "endereco_bairro" | "endereco_rua" | "endereco_numero" | "created_at" | "updated_at", ExtArgs["result"]["cliente"]>
  export type ClienteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Card?: boolean | Cliente$CardArgs<ExtArgs>
    _count?: boolean | ClienteCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $ClientePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Cliente"
    objects: {
      Card: Prisma.$CardPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_cliente: number
      telefone: string | null
      nome: string
      sobrenome: string
      cpf: string | null
      data_nascimento: string | null
      email: string
      password: string
      endereco_estado: string | null
      endereco_cidade: string | null
      endereco_bairro: string | null
      endereco_rua: string | null
      endereco_numero: string | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["cliente"]>
    composites: {}
  }

  type ClienteGetPayload<S extends boolean | null | undefined | ClienteDefaultArgs> = $Result.GetResult<Prisma.$ClientePayload, S>

  type ClienteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ClienteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ClienteCountAggregateInputType | true
    }

  export interface ClienteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Cliente'], meta: { name: 'Cliente' } }
    /**
     * Find zero or one Cliente that matches the filter.
     * @param {ClienteFindUniqueArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClienteFindUniqueArgs>(args: SelectSubset<T, ClienteFindUniqueArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cliente that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ClienteFindUniqueOrThrowArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClienteFindUniqueOrThrowArgs>(args: SelectSubset<T, ClienteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cliente that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteFindFirstArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClienteFindFirstArgs>(args?: SelectSubset<T, ClienteFindFirstArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cliente that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteFindFirstOrThrowArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClienteFindFirstOrThrowArgs>(args?: SelectSubset<T, ClienteFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Clientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clientes
     * const clientes = await prisma.cliente.findMany()
     * 
     * // Get first 10 Clientes
     * const clientes = await prisma.cliente.findMany({ take: 10 })
     * 
     * // Only select the `id_cliente`
     * const clienteWithId_clienteOnly = await prisma.cliente.findMany({ select: { id_cliente: true } })
     * 
     */
    findMany<T extends ClienteFindManyArgs>(args?: SelectSubset<T, ClienteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cliente.
     * @param {ClienteCreateArgs} args - Arguments to create a Cliente.
     * @example
     * // Create one Cliente
     * const Cliente = await prisma.cliente.create({
     *   data: {
     *     // ... data to create a Cliente
     *   }
     * })
     * 
     */
    create<T extends ClienteCreateArgs>(args: SelectSubset<T, ClienteCreateArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Clientes.
     * @param {ClienteCreateManyArgs} args - Arguments to create many Clientes.
     * @example
     * // Create many Clientes
     * const cliente = await prisma.cliente.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClienteCreateManyArgs>(args?: SelectSubset<T, ClienteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Cliente.
     * @param {ClienteDeleteArgs} args - Arguments to delete one Cliente.
     * @example
     * // Delete one Cliente
     * const Cliente = await prisma.cliente.delete({
     *   where: {
     *     // ... filter to delete one Cliente
     *   }
     * })
     * 
     */
    delete<T extends ClienteDeleteArgs>(args: SelectSubset<T, ClienteDeleteArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cliente.
     * @param {ClienteUpdateArgs} args - Arguments to update one Cliente.
     * @example
     * // Update one Cliente
     * const cliente = await prisma.cliente.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClienteUpdateArgs>(args: SelectSubset<T, ClienteUpdateArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Clientes.
     * @param {ClienteDeleteManyArgs} args - Arguments to filter Clientes to delete.
     * @example
     * // Delete a few Clientes
     * const { count } = await prisma.cliente.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClienteDeleteManyArgs>(args?: SelectSubset<T, ClienteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clientes
     * const cliente = await prisma.cliente.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClienteUpdateManyArgs>(args: SelectSubset<T, ClienteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Cliente.
     * @param {ClienteUpsertArgs} args - Arguments to update or create a Cliente.
     * @example
     * // Update or create a Cliente
     * const cliente = await prisma.cliente.upsert({
     *   create: {
     *     // ... data to create a Cliente
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cliente we want to update
     *   }
     * })
     */
    upsert<T extends ClienteUpsertArgs>(args: SelectSubset<T, ClienteUpsertArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteCountArgs} args - Arguments to filter Clientes to count.
     * @example
     * // Count the number of Clientes
     * const count = await prisma.cliente.count({
     *   where: {
     *     // ... the filter for the Clientes we want to count
     *   }
     * })
    **/
    count<T extends ClienteCountArgs>(
      args?: Subset<T, ClienteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClienteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClienteAggregateArgs>(args: Subset<T, ClienteAggregateArgs>): Prisma.PrismaPromise<GetClienteAggregateType<T>>

    /**
     * Group by Cliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClienteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClienteGroupByArgs['orderBy'] }
        : { orderBy?: ClienteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClienteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClienteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Cliente model
   */
  readonly fields: ClienteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Cliente.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClienteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Card<T extends Cliente$CardArgs<ExtArgs> = {}>(args?: Subset<T, Cliente$CardArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CardPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Cliente model
   */
  interface ClienteFieldRefs {
    readonly id_cliente: FieldRef<"Cliente", 'Int'>
    readonly telefone: FieldRef<"Cliente", 'String'>
    readonly nome: FieldRef<"Cliente", 'String'>
    readonly sobrenome: FieldRef<"Cliente", 'String'>
    readonly cpf: FieldRef<"Cliente", 'String'>
    readonly data_nascimento: FieldRef<"Cliente", 'String'>
    readonly email: FieldRef<"Cliente", 'String'>
    readonly password: FieldRef<"Cliente", 'String'>
    readonly endereco_estado: FieldRef<"Cliente", 'String'>
    readonly endereco_cidade: FieldRef<"Cliente", 'String'>
    readonly endereco_bairro: FieldRef<"Cliente", 'String'>
    readonly endereco_rua: FieldRef<"Cliente", 'String'>
    readonly endereco_numero: FieldRef<"Cliente", 'String'>
    readonly created_at: FieldRef<"Cliente", 'DateTime'>
    readonly updated_at: FieldRef<"Cliente", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Cliente findUnique
   */
  export type ClienteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente findUniqueOrThrow
   */
  export type ClienteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente findFirst
   */
  export type ClienteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clientes.
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clientes.
     */
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Cliente findFirstOrThrow
   */
  export type ClienteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clientes.
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clientes.
     */
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Cliente findMany
   */
  export type ClienteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Clientes to fetch.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Clientes.
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Cliente create
   */
  export type ClienteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * The data needed to create a Cliente.
     */
    data: XOR<ClienteCreateInput, ClienteUncheckedCreateInput>
  }

  /**
   * Cliente createMany
   */
  export type ClienteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Clientes.
     */
    data: ClienteCreateManyInput | ClienteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Cliente update
   */
  export type ClienteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * The data needed to update a Cliente.
     */
    data: XOR<ClienteUpdateInput, ClienteUncheckedUpdateInput>
    /**
     * Choose, which Cliente to update.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente updateMany
   */
  export type ClienteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Clientes.
     */
    data: XOR<ClienteUpdateManyMutationInput, ClienteUncheckedUpdateManyInput>
    /**
     * Filter which Clientes to update
     */
    where?: ClienteWhereInput
    /**
     * Limit how many Clientes to update.
     */
    limit?: number
  }

  /**
   * Cliente upsert
   */
  export type ClienteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * The filter to search for the Cliente to update in case it exists.
     */
    where: ClienteWhereUniqueInput
    /**
     * In case the Cliente found by the `where` argument doesn't exist, create a new Cliente with this data.
     */
    create: XOR<ClienteCreateInput, ClienteUncheckedCreateInput>
    /**
     * In case the Cliente was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClienteUpdateInput, ClienteUncheckedUpdateInput>
  }

  /**
   * Cliente delete
   */
  export type ClienteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter which Cliente to delete.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente deleteMany
   */
  export type ClienteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Clientes to delete
     */
    where?: ClienteWhereInput
    /**
     * Limit how many Clientes to delete.
     */
    limit?: number
  }

  /**
   * Cliente.Card
   */
  export type Cliente$CardArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Card
     */
    select?: CardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Card
     */
    omit?: CardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CardInclude<ExtArgs> | null
    where?: CardWhereInput
    orderBy?: CardOrderByWithRelationInput | CardOrderByWithRelationInput[]
    cursor?: CardWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CardScalarFieldEnum | CardScalarFieldEnum[]
  }

  /**
   * Cliente without action
   */
  export type ClienteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
  }


  /**
   * Model Prestador
   */

  export type AggregatePrestador = {
    _count: PrestadorCountAggregateOutputType | null
    _avg: PrestadorAvgAggregateOutputType | null
    _sum: PrestadorSumAggregateOutputType | null
    _min: PrestadorMinAggregateOutputType | null
    _max: PrestadorMaxAggregateOutputType | null
  }

  export type PrestadorAvgAggregateOutputType = {
    id_prestador: number | null
  }

  export type PrestadorSumAggregateOutputType = {
    id_prestador: number | null
  }

  export type PrestadorMinAggregateOutputType = {
    id_prestador: number | null
    telefone: string | null
    nome: string | null
    sobrenome: string | null
    cpf: string | null
    data_nascimento: string | null
    email: string | null
    password: string | null
    endereco_estado: string | null
    endereco_cidade: string | null
    endereco_bairro: string | null
    endereco_rua: string | null
    endereco_numero: string | null
    especializacao: string | null
    descricao: string | null
    avaliacao: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type PrestadorMaxAggregateOutputType = {
    id_prestador: number | null
    telefone: string | null
    nome: string | null
    sobrenome: string | null
    cpf: string | null
    data_nascimento: string | null
    email: string | null
    password: string | null
    endereco_estado: string | null
    endereco_cidade: string | null
    endereco_bairro: string | null
    endereco_rua: string | null
    endereco_numero: string | null
    especializacao: string | null
    descricao: string | null
    avaliacao: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type PrestadorCountAggregateOutputType = {
    id_prestador: number
    telefone: number
    nome: number
    sobrenome: number
    cpf: number
    data_nascimento: number
    email: number
    password: number
    endereco_estado: number
    endereco_cidade: number
    endereco_bairro: number
    endereco_rua: number
    endereco_numero: number
    especializacao: number
    descricao: number
    avaliacao: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type PrestadorAvgAggregateInputType = {
    id_prestador?: true
  }

  export type PrestadorSumAggregateInputType = {
    id_prestador?: true
  }

  export type PrestadorMinAggregateInputType = {
    id_prestador?: true
    telefone?: true
    nome?: true
    sobrenome?: true
    cpf?: true
    data_nascimento?: true
    email?: true
    password?: true
    endereco_estado?: true
    endereco_cidade?: true
    endereco_bairro?: true
    endereco_rua?: true
    endereco_numero?: true
    especializacao?: true
    descricao?: true
    avaliacao?: true
    created_at?: true
    updated_at?: true
  }

  export type PrestadorMaxAggregateInputType = {
    id_prestador?: true
    telefone?: true
    nome?: true
    sobrenome?: true
    cpf?: true
    data_nascimento?: true
    email?: true
    password?: true
    endereco_estado?: true
    endereco_cidade?: true
    endereco_bairro?: true
    endereco_rua?: true
    endereco_numero?: true
    especializacao?: true
    descricao?: true
    avaliacao?: true
    created_at?: true
    updated_at?: true
  }

  export type PrestadorCountAggregateInputType = {
    id_prestador?: true
    telefone?: true
    nome?: true
    sobrenome?: true
    cpf?: true
    data_nascimento?: true
    email?: true
    password?: true
    endereco_estado?: true
    endereco_cidade?: true
    endereco_bairro?: true
    endereco_rua?: true
    endereco_numero?: true
    especializacao?: true
    descricao?: true
    avaliacao?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type PrestadorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Prestador to aggregate.
     */
    where?: PrestadorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prestadors to fetch.
     */
    orderBy?: PrestadorOrderByWithRelationInput | PrestadorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PrestadorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prestadors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prestadors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Prestadors
    **/
    _count?: true | PrestadorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PrestadorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PrestadorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PrestadorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PrestadorMaxAggregateInputType
  }

  export type GetPrestadorAggregateType<T extends PrestadorAggregateArgs> = {
        [P in keyof T & keyof AggregatePrestador]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePrestador[P]>
      : GetScalarType<T[P], AggregatePrestador[P]>
  }




  export type PrestadorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PrestadorWhereInput
    orderBy?: PrestadorOrderByWithAggregationInput | PrestadorOrderByWithAggregationInput[]
    by: PrestadorScalarFieldEnum[] | PrestadorScalarFieldEnum
    having?: PrestadorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PrestadorCountAggregateInputType | true
    _avg?: PrestadorAvgAggregateInputType
    _sum?: PrestadorSumAggregateInputType
    _min?: PrestadorMinAggregateInputType
    _max?: PrestadorMaxAggregateInputType
  }

  export type PrestadorGroupByOutputType = {
    id_prestador: number
    telefone: string | null
    nome: string
    sobrenome: string
    cpf: string | null
    data_nascimento: string | null
    email: string
    password: string
    endereco_estado: string | null
    endereco_cidade: string | null
    endereco_bairro: string | null
    endereco_rua: string | null
    endereco_numero: string | null
    especializacao: string | null
    descricao: string | null
    avaliacao: string | null
    created_at: Date
    updated_at: Date
    _count: PrestadorCountAggregateOutputType | null
    _avg: PrestadorAvgAggregateOutputType | null
    _sum: PrestadorSumAggregateOutputType | null
    _min: PrestadorMinAggregateOutputType | null
    _max: PrestadorMaxAggregateOutputType | null
  }

  type GetPrestadorGroupByPayload<T extends PrestadorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PrestadorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PrestadorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PrestadorGroupByOutputType[P]>
            : GetScalarType<T[P], PrestadorGroupByOutputType[P]>
        }
      >
    >


  export type PrestadorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_prestador?: boolean
    telefone?: boolean
    nome?: boolean
    sobrenome?: boolean
    cpf?: boolean
    data_nascimento?: boolean
    email?: boolean
    password?: boolean
    endereco_estado?: boolean
    endereco_cidade?: boolean
    endereco_bairro?: boolean
    endereco_rua?: boolean
    endereco_numero?: boolean
    especializacao?: boolean
    descricao?: boolean
    avaliacao?: boolean
    created_at?: boolean
    updated_at?: boolean
    Candidatura?: boolean | Prestador$CandidaturaArgs<ExtArgs>
    Card?: boolean | Prestador$CardArgs<ExtArgs>
    _count?: boolean | PrestadorCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["prestador"]>



  export type PrestadorSelectScalar = {
    id_prestador?: boolean
    telefone?: boolean
    nome?: boolean
    sobrenome?: boolean
    cpf?: boolean
    data_nascimento?: boolean
    email?: boolean
    password?: boolean
    endereco_estado?: boolean
    endereco_cidade?: boolean
    endereco_bairro?: boolean
    endereco_rua?: boolean
    endereco_numero?: boolean
    especializacao?: boolean
    descricao?: boolean
    avaliacao?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type PrestadorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_prestador" | "telefone" | "nome" | "sobrenome" | "cpf" | "data_nascimento" | "email" | "password" | "endereco_estado" | "endereco_cidade" | "endereco_bairro" | "endereco_rua" | "endereco_numero" | "especializacao" | "descricao" | "avaliacao" | "created_at" | "updated_at", ExtArgs["result"]["prestador"]>
  export type PrestadorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Candidatura?: boolean | Prestador$CandidaturaArgs<ExtArgs>
    Card?: boolean | Prestador$CardArgs<ExtArgs>
    _count?: boolean | PrestadorCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $PrestadorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Prestador"
    objects: {
      Candidatura: Prisma.$CandidaturaPayload<ExtArgs>[]
      Card: Prisma.$CardPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_prestador: number
      telefone: string | null
      nome: string
      sobrenome: string
      cpf: string | null
      data_nascimento: string | null
      email: string
      password: string
      endereco_estado: string | null
      endereco_cidade: string | null
      endereco_bairro: string | null
      endereco_rua: string | null
      endereco_numero: string | null
      especializacao: string | null
      descricao: string | null
      avaliacao: string | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["prestador"]>
    composites: {}
  }

  type PrestadorGetPayload<S extends boolean | null | undefined | PrestadorDefaultArgs> = $Result.GetResult<Prisma.$PrestadorPayload, S>

  type PrestadorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PrestadorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PrestadorCountAggregateInputType | true
    }

  export interface PrestadorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Prestador'], meta: { name: 'Prestador' } }
    /**
     * Find zero or one Prestador that matches the filter.
     * @param {PrestadorFindUniqueArgs} args - Arguments to find a Prestador
     * @example
     * // Get one Prestador
     * const prestador = await prisma.prestador.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PrestadorFindUniqueArgs>(args: SelectSubset<T, PrestadorFindUniqueArgs<ExtArgs>>): Prisma__PrestadorClient<$Result.GetResult<Prisma.$PrestadorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Prestador that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PrestadorFindUniqueOrThrowArgs} args - Arguments to find a Prestador
     * @example
     * // Get one Prestador
     * const prestador = await prisma.prestador.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PrestadorFindUniqueOrThrowArgs>(args: SelectSubset<T, PrestadorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PrestadorClient<$Result.GetResult<Prisma.$PrestadorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Prestador that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrestadorFindFirstArgs} args - Arguments to find a Prestador
     * @example
     * // Get one Prestador
     * const prestador = await prisma.prestador.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PrestadorFindFirstArgs>(args?: SelectSubset<T, PrestadorFindFirstArgs<ExtArgs>>): Prisma__PrestadorClient<$Result.GetResult<Prisma.$PrestadorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Prestador that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrestadorFindFirstOrThrowArgs} args - Arguments to find a Prestador
     * @example
     * // Get one Prestador
     * const prestador = await prisma.prestador.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PrestadorFindFirstOrThrowArgs>(args?: SelectSubset<T, PrestadorFindFirstOrThrowArgs<ExtArgs>>): Prisma__PrestadorClient<$Result.GetResult<Prisma.$PrestadorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Prestadors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrestadorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Prestadors
     * const prestadors = await prisma.prestador.findMany()
     * 
     * // Get first 10 Prestadors
     * const prestadors = await prisma.prestador.findMany({ take: 10 })
     * 
     * // Only select the `id_prestador`
     * const prestadorWithId_prestadorOnly = await prisma.prestador.findMany({ select: { id_prestador: true } })
     * 
     */
    findMany<T extends PrestadorFindManyArgs>(args?: SelectSubset<T, PrestadorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PrestadorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Prestador.
     * @param {PrestadorCreateArgs} args - Arguments to create a Prestador.
     * @example
     * // Create one Prestador
     * const Prestador = await prisma.prestador.create({
     *   data: {
     *     // ... data to create a Prestador
     *   }
     * })
     * 
     */
    create<T extends PrestadorCreateArgs>(args: SelectSubset<T, PrestadorCreateArgs<ExtArgs>>): Prisma__PrestadorClient<$Result.GetResult<Prisma.$PrestadorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Prestadors.
     * @param {PrestadorCreateManyArgs} args - Arguments to create many Prestadors.
     * @example
     * // Create many Prestadors
     * const prestador = await prisma.prestador.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PrestadorCreateManyArgs>(args?: SelectSubset<T, PrestadorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Prestador.
     * @param {PrestadorDeleteArgs} args - Arguments to delete one Prestador.
     * @example
     * // Delete one Prestador
     * const Prestador = await prisma.prestador.delete({
     *   where: {
     *     // ... filter to delete one Prestador
     *   }
     * })
     * 
     */
    delete<T extends PrestadorDeleteArgs>(args: SelectSubset<T, PrestadorDeleteArgs<ExtArgs>>): Prisma__PrestadorClient<$Result.GetResult<Prisma.$PrestadorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Prestador.
     * @param {PrestadorUpdateArgs} args - Arguments to update one Prestador.
     * @example
     * // Update one Prestador
     * const prestador = await prisma.prestador.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PrestadorUpdateArgs>(args: SelectSubset<T, PrestadorUpdateArgs<ExtArgs>>): Prisma__PrestadorClient<$Result.GetResult<Prisma.$PrestadorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Prestadors.
     * @param {PrestadorDeleteManyArgs} args - Arguments to filter Prestadors to delete.
     * @example
     * // Delete a few Prestadors
     * const { count } = await prisma.prestador.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PrestadorDeleteManyArgs>(args?: SelectSubset<T, PrestadorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Prestadors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrestadorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Prestadors
     * const prestador = await prisma.prestador.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PrestadorUpdateManyArgs>(args: SelectSubset<T, PrestadorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Prestador.
     * @param {PrestadorUpsertArgs} args - Arguments to update or create a Prestador.
     * @example
     * // Update or create a Prestador
     * const prestador = await prisma.prestador.upsert({
     *   create: {
     *     // ... data to create a Prestador
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Prestador we want to update
     *   }
     * })
     */
    upsert<T extends PrestadorUpsertArgs>(args: SelectSubset<T, PrestadorUpsertArgs<ExtArgs>>): Prisma__PrestadorClient<$Result.GetResult<Prisma.$PrestadorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Prestadors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrestadorCountArgs} args - Arguments to filter Prestadors to count.
     * @example
     * // Count the number of Prestadors
     * const count = await prisma.prestador.count({
     *   where: {
     *     // ... the filter for the Prestadors we want to count
     *   }
     * })
    **/
    count<T extends PrestadorCountArgs>(
      args?: Subset<T, PrestadorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PrestadorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Prestador.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrestadorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PrestadorAggregateArgs>(args: Subset<T, PrestadorAggregateArgs>): Prisma.PrismaPromise<GetPrestadorAggregateType<T>>

    /**
     * Group by Prestador.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrestadorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PrestadorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PrestadorGroupByArgs['orderBy'] }
        : { orderBy?: PrestadorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PrestadorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPrestadorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Prestador model
   */
  readonly fields: PrestadorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Prestador.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PrestadorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Candidatura<T extends Prestador$CandidaturaArgs<ExtArgs> = {}>(args?: Subset<T, Prestador$CandidaturaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CandidaturaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Card<T extends Prestador$CardArgs<ExtArgs> = {}>(args?: Subset<T, Prestador$CardArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CardPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Prestador model
   */
  interface PrestadorFieldRefs {
    readonly id_prestador: FieldRef<"Prestador", 'Int'>
    readonly telefone: FieldRef<"Prestador", 'String'>
    readonly nome: FieldRef<"Prestador", 'String'>
    readonly sobrenome: FieldRef<"Prestador", 'String'>
    readonly cpf: FieldRef<"Prestador", 'String'>
    readonly data_nascimento: FieldRef<"Prestador", 'String'>
    readonly email: FieldRef<"Prestador", 'String'>
    readonly password: FieldRef<"Prestador", 'String'>
    readonly endereco_estado: FieldRef<"Prestador", 'String'>
    readonly endereco_cidade: FieldRef<"Prestador", 'String'>
    readonly endereco_bairro: FieldRef<"Prestador", 'String'>
    readonly endereco_rua: FieldRef<"Prestador", 'String'>
    readonly endereco_numero: FieldRef<"Prestador", 'String'>
    readonly especializacao: FieldRef<"Prestador", 'String'>
    readonly descricao: FieldRef<"Prestador", 'String'>
    readonly avaliacao: FieldRef<"Prestador", 'String'>
    readonly created_at: FieldRef<"Prestador", 'DateTime'>
    readonly updated_at: FieldRef<"Prestador", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Prestador findUnique
   */
  export type PrestadorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prestador
     */
    select?: PrestadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prestador
     */
    omit?: PrestadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrestadorInclude<ExtArgs> | null
    /**
     * Filter, which Prestador to fetch.
     */
    where: PrestadorWhereUniqueInput
  }

  /**
   * Prestador findUniqueOrThrow
   */
  export type PrestadorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prestador
     */
    select?: PrestadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prestador
     */
    omit?: PrestadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrestadorInclude<ExtArgs> | null
    /**
     * Filter, which Prestador to fetch.
     */
    where: PrestadorWhereUniqueInput
  }

  /**
   * Prestador findFirst
   */
  export type PrestadorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prestador
     */
    select?: PrestadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prestador
     */
    omit?: PrestadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrestadorInclude<ExtArgs> | null
    /**
     * Filter, which Prestador to fetch.
     */
    where?: PrestadorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prestadors to fetch.
     */
    orderBy?: PrestadorOrderByWithRelationInput | PrestadorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Prestadors.
     */
    cursor?: PrestadorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prestadors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prestadors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Prestadors.
     */
    distinct?: PrestadorScalarFieldEnum | PrestadorScalarFieldEnum[]
  }

  /**
   * Prestador findFirstOrThrow
   */
  export type PrestadorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prestador
     */
    select?: PrestadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prestador
     */
    omit?: PrestadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrestadorInclude<ExtArgs> | null
    /**
     * Filter, which Prestador to fetch.
     */
    where?: PrestadorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prestadors to fetch.
     */
    orderBy?: PrestadorOrderByWithRelationInput | PrestadorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Prestadors.
     */
    cursor?: PrestadorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prestadors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prestadors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Prestadors.
     */
    distinct?: PrestadorScalarFieldEnum | PrestadorScalarFieldEnum[]
  }

  /**
   * Prestador findMany
   */
  export type PrestadorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prestador
     */
    select?: PrestadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prestador
     */
    omit?: PrestadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrestadorInclude<ExtArgs> | null
    /**
     * Filter, which Prestadors to fetch.
     */
    where?: PrestadorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prestadors to fetch.
     */
    orderBy?: PrestadorOrderByWithRelationInput | PrestadorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Prestadors.
     */
    cursor?: PrestadorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prestadors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prestadors.
     */
    skip?: number
    distinct?: PrestadorScalarFieldEnum | PrestadorScalarFieldEnum[]
  }

  /**
   * Prestador create
   */
  export type PrestadorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prestador
     */
    select?: PrestadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prestador
     */
    omit?: PrestadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrestadorInclude<ExtArgs> | null
    /**
     * The data needed to create a Prestador.
     */
    data: XOR<PrestadorCreateInput, PrestadorUncheckedCreateInput>
  }

  /**
   * Prestador createMany
   */
  export type PrestadorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Prestadors.
     */
    data: PrestadorCreateManyInput | PrestadorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Prestador update
   */
  export type PrestadorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prestador
     */
    select?: PrestadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prestador
     */
    omit?: PrestadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrestadorInclude<ExtArgs> | null
    /**
     * The data needed to update a Prestador.
     */
    data: XOR<PrestadorUpdateInput, PrestadorUncheckedUpdateInput>
    /**
     * Choose, which Prestador to update.
     */
    where: PrestadorWhereUniqueInput
  }

  /**
   * Prestador updateMany
   */
  export type PrestadorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Prestadors.
     */
    data: XOR<PrestadorUpdateManyMutationInput, PrestadorUncheckedUpdateManyInput>
    /**
     * Filter which Prestadors to update
     */
    where?: PrestadorWhereInput
    /**
     * Limit how many Prestadors to update.
     */
    limit?: number
  }

  /**
   * Prestador upsert
   */
  export type PrestadorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prestador
     */
    select?: PrestadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prestador
     */
    omit?: PrestadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrestadorInclude<ExtArgs> | null
    /**
     * The filter to search for the Prestador to update in case it exists.
     */
    where: PrestadorWhereUniqueInput
    /**
     * In case the Prestador found by the `where` argument doesn't exist, create a new Prestador with this data.
     */
    create: XOR<PrestadorCreateInput, PrestadorUncheckedCreateInput>
    /**
     * In case the Prestador was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PrestadorUpdateInput, PrestadorUncheckedUpdateInput>
  }

  /**
   * Prestador delete
   */
  export type PrestadorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prestador
     */
    select?: PrestadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prestador
     */
    omit?: PrestadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrestadorInclude<ExtArgs> | null
    /**
     * Filter which Prestador to delete.
     */
    where: PrestadorWhereUniqueInput
  }

  /**
   * Prestador deleteMany
   */
  export type PrestadorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Prestadors to delete
     */
    where?: PrestadorWhereInput
    /**
     * Limit how many Prestadors to delete.
     */
    limit?: number
  }

  /**
   * Prestador.Candidatura
   */
  export type Prestador$CandidaturaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidatura
     */
    select?: CandidaturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Candidatura
     */
    omit?: CandidaturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidaturaInclude<ExtArgs> | null
    where?: CandidaturaWhereInput
    orderBy?: CandidaturaOrderByWithRelationInput | CandidaturaOrderByWithRelationInput[]
    cursor?: CandidaturaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CandidaturaScalarFieldEnum | CandidaturaScalarFieldEnum[]
  }

  /**
   * Prestador.Card
   */
  export type Prestador$CardArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Card
     */
    select?: CardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Card
     */
    omit?: CardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CardInclude<ExtArgs> | null
    where?: CardWhereInput
    orderBy?: CardOrderByWithRelationInput | CardOrderByWithRelationInput[]
    cursor?: CardWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CardScalarFieldEnum | CardScalarFieldEnum[]
  }

  /**
   * Prestador without action
   */
  export type PrestadorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prestador
     */
    select?: PrestadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prestador
     */
    omit?: PrestadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrestadorInclude<ExtArgs> | null
  }


  /**
   * Model Candidatura
   */

  export type AggregateCandidatura = {
    _count: CandidaturaCountAggregateOutputType | null
    _avg: CandidaturaAvgAggregateOutputType | null
    _sum: CandidaturaSumAggregateOutputType | null
    _min: CandidaturaMinAggregateOutputType | null
    _max: CandidaturaMaxAggregateOutputType | null
  }

  export type CandidaturaAvgAggregateOutputType = {
    id_candidatura: number | null
    prestador_id: number | null
  }

  export type CandidaturaSumAggregateOutputType = {
    id_candidatura: number | null
    prestador_id: number | null
  }

  export type CandidaturaMinAggregateOutputType = {
    id_candidatura: number | null
    id_pedido: string | null
    prestador_id: number | null
    valor_negociado: string | null
    horario_negociado: string | null
    status: string | null
    data_candidatura: Date | null
  }

  export type CandidaturaMaxAggregateOutputType = {
    id_candidatura: number | null
    id_pedido: string | null
    prestador_id: number | null
    valor_negociado: string | null
    horario_negociado: string | null
    status: string | null
    data_candidatura: Date | null
  }

  export type CandidaturaCountAggregateOutputType = {
    id_candidatura: number
    id_pedido: number
    prestador_id: number
    valor_negociado: number
    horario_negociado: number
    status: number
    data_candidatura: number
    _all: number
  }


  export type CandidaturaAvgAggregateInputType = {
    id_candidatura?: true
    prestador_id?: true
  }

  export type CandidaturaSumAggregateInputType = {
    id_candidatura?: true
    prestador_id?: true
  }

  export type CandidaturaMinAggregateInputType = {
    id_candidatura?: true
    id_pedido?: true
    prestador_id?: true
    valor_negociado?: true
    horario_negociado?: true
    status?: true
    data_candidatura?: true
  }

  export type CandidaturaMaxAggregateInputType = {
    id_candidatura?: true
    id_pedido?: true
    prestador_id?: true
    valor_negociado?: true
    horario_negociado?: true
    status?: true
    data_candidatura?: true
  }

  export type CandidaturaCountAggregateInputType = {
    id_candidatura?: true
    id_pedido?: true
    prestador_id?: true
    valor_negociado?: true
    horario_negociado?: true
    status?: true
    data_candidatura?: true
    _all?: true
  }

  export type CandidaturaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Candidatura to aggregate.
     */
    where?: CandidaturaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Candidaturas to fetch.
     */
    orderBy?: CandidaturaOrderByWithRelationInput | CandidaturaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CandidaturaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Candidaturas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Candidaturas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Candidaturas
    **/
    _count?: true | CandidaturaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CandidaturaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CandidaturaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CandidaturaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CandidaturaMaxAggregateInputType
  }

  export type GetCandidaturaAggregateType<T extends CandidaturaAggregateArgs> = {
        [P in keyof T & keyof AggregateCandidatura]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCandidatura[P]>
      : GetScalarType<T[P], AggregateCandidatura[P]>
  }




  export type CandidaturaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CandidaturaWhereInput
    orderBy?: CandidaturaOrderByWithAggregationInput | CandidaturaOrderByWithAggregationInput[]
    by: CandidaturaScalarFieldEnum[] | CandidaturaScalarFieldEnum
    having?: CandidaturaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CandidaturaCountAggregateInputType | true
    _avg?: CandidaturaAvgAggregateInputType
    _sum?: CandidaturaSumAggregateInputType
    _min?: CandidaturaMinAggregateInputType
    _max?: CandidaturaMaxAggregateInputType
  }

  export type CandidaturaGroupByOutputType = {
    id_candidatura: number
    id_pedido: string
    prestador_id: number
    valor_negociado: string | null
    horario_negociado: string | null
    status: string | null
    data_candidatura: Date
    _count: CandidaturaCountAggregateOutputType | null
    _avg: CandidaturaAvgAggregateOutputType | null
    _sum: CandidaturaSumAggregateOutputType | null
    _min: CandidaturaMinAggregateOutputType | null
    _max: CandidaturaMaxAggregateOutputType | null
  }

  type GetCandidaturaGroupByPayload<T extends CandidaturaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CandidaturaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CandidaturaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CandidaturaGroupByOutputType[P]>
            : GetScalarType<T[P], CandidaturaGroupByOutputType[P]>
        }
      >
    >


  export type CandidaturaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_candidatura?: boolean
    id_pedido?: boolean
    prestador_id?: boolean
    valor_negociado?: boolean
    horario_negociado?: boolean
    status?: boolean
    data_candidatura?: boolean
    Card?: boolean | CardDefaultArgs<ExtArgs>
    Prestador?: boolean | PrestadorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["candidatura"]>



  export type CandidaturaSelectScalar = {
    id_candidatura?: boolean
    id_pedido?: boolean
    prestador_id?: boolean
    valor_negociado?: boolean
    horario_negociado?: boolean
    status?: boolean
    data_candidatura?: boolean
  }

  export type CandidaturaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_candidatura" | "id_pedido" | "prestador_id" | "valor_negociado" | "horario_negociado" | "status" | "data_candidatura", ExtArgs["result"]["candidatura"]>
  export type CandidaturaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Card?: boolean | CardDefaultArgs<ExtArgs>
    Prestador?: boolean | PrestadorDefaultArgs<ExtArgs>
  }

  export type $CandidaturaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Candidatura"
    objects: {
      Card: Prisma.$CardPayload<ExtArgs>
      Prestador: Prisma.$PrestadorPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_candidatura: number
      id_pedido: string
      prestador_id: number
      valor_negociado: string | null
      horario_negociado: string | null
      status: string | null
      data_candidatura: Date
    }, ExtArgs["result"]["candidatura"]>
    composites: {}
  }

  type CandidaturaGetPayload<S extends boolean | null | undefined | CandidaturaDefaultArgs> = $Result.GetResult<Prisma.$CandidaturaPayload, S>

  type CandidaturaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CandidaturaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CandidaturaCountAggregateInputType | true
    }

  export interface CandidaturaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Candidatura'], meta: { name: 'Candidatura' } }
    /**
     * Find zero or one Candidatura that matches the filter.
     * @param {CandidaturaFindUniqueArgs} args - Arguments to find a Candidatura
     * @example
     * // Get one Candidatura
     * const candidatura = await prisma.candidatura.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CandidaturaFindUniqueArgs>(args: SelectSubset<T, CandidaturaFindUniqueArgs<ExtArgs>>): Prisma__CandidaturaClient<$Result.GetResult<Prisma.$CandidaturaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Candidatura that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CandidaturaFindUniqueOrThrowArgs} args - Arguments to find a Candidatura
     * @example
     * // Get one Candidatura
     * const candidatura = await prisma.candidatura.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CandidaturaFindUniqueOrThrowArgs>(args: SelectSubset<T, CandidaturaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CandidaturaClient<$Result.GetResult<Prisma.$CandidaturaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Candidatura that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidaturaFindFirstArgs} args - Arguments to find a Candidatura
     * @example
     * // Get one Candidatura
     * const candidatura = await prisma.candidatura.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CandidaturaFindFirstArgs>(args?: SelectSubset<T, CandidaturaFindFirstArgs<ExtArgs>>): Prisma__CandidaturaClient<$Result.GetResult<Prisma.$CandidaturaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Candidatura that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidaturaFindFirstOrThrowArgs} args - Arguments to find a Candidatura
     * @example
     * // Get one Candidatura
     * const candidatura = await prisma.candidatura.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CandidaturaFindFirstOrThrowArgs>(args?: SelectSubset<T, CandidaturaFindFirstOrThrowArgs<ExtArgs>>): Prisma__CandidaturaClient<$Result.GetResult<Prisma.$CandidaturaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Candidaturas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidaturaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Candidaturas
     * const candidaturas = await prisma.candidatura.findMany()
     * 
     * // Get first 10 Candidaturas
     * const candidaturas = await prisma.candidatura.findMany({ take: 10 })
     * 
     * // Only select the `id_candidatura`
     * const candidaturaWithId_candidaturaOnly = await prisma.candidatura.findMany({ select: { id_candidatura: true } })
     * 
     */
    findMany<T extends CandidaturaFindManyArgs>(args?: SelectSubset<T, CandidaturaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CandidaturaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Candidatura.
     * @param {CandidaturaCreateArgs} args - Arguments to create a Candidatura.
     * @example
     * // Create one Candidatura
     * const Candidatura = await prisma.candidatura.create({
     *   data: {
     *     // ... data to create a Candidatura
     *   }
     * })
     * 
     */
    create<T extends CandidaturaCreateArgs>(args: SelectSubset<T, CandidaturaCreateArgs<ExtArgs>>): Prisma__CandidaturaClient<$Result.GetResult<Prisma.$CandidaturaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Candidaturas.
     * @param {CandidaturaCreateManyArgs} args - Arguments to create many Candidaturas.
     * @example
     * // Create many Candidaturas
     * const candidatura = await prisma.candidatura.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CandidaturaCreateManyArgs>(args?: SelectSubset<T, CandidaturaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Candidatura.
     * @param {CandidaturaDeleteArgs} args - Arguments to delete one Candidatura.
     * @example
     * // Delete one Candidatura
     * const Candidatura = await prisma.candidatura.delete({
     *   where: {
     *     // ... filter to delete one Candidatura
     *   }
     * })
     * 
     */
    delete<T extends CandidaturaDeleteArgs>(args: SelectSubset<T, CandidaturaDeleteArgs<ExtArgs>>): Prisma__CandidaturaClient<$Result.GetResult<Prisma.$CandidaturaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Candidatura.
     * @param {CandidaturaUpdateArgs} args - Arguments to update one Candidatura.
     * @example
     * // Update one Candidatura
     * const candidatura = await prisma.candidatura.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CandidaturaUpdateArgs>(args: SelectSubset<T, CandidaturaUpdateArgs<ExtArgs>>): Prisma__CandidaturaClient<$Result.GetResult<Prisma.$CandidaturaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Candidaturas.
     * @param {CandidaturaDeleteManyArgs} args - Arguments to filter Candidaturas to delete.
     * @example
     * // Delete a few Candidaturas
     * const { count } = await prisma.candidatura.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CandidaturaDeleteManyArgs>(args?: SelectSubset<T, CandidaturaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Candidaturas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidaturaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Candidaturas
     * const candidatura = await prisma.candidatura.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CandidaturaUpdateManyArgs>(args: SelectSubset<T, CandidaturaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Candidatura.
     * @param {CandidaturaUpsertArgs} args - Arguments to update or create a Candidatura.
     * @example
     * // Update or create a Candidatura
     * const candidatura = await prisma.candidatura.upsert({
     *   create: {
     *     // ... data to create a Candidatura
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Candidatura we want to update
     *   }
     * })
     */
    upsert<T extends CandidaturaUpsertArgs>(args: SelectSubset<T, CandidaturaUpsertArgs<ExtArgs>>): Prisma__CandidaturaClient<$Result.GetResult<Prisma.$CandidaturaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Candidaturas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidaturaCountArgs} args - Arguments to filter Candidaturas to count.
     * @example
     * // Count the number of Candidaturas
     * const count = await prisma.candidatura.count({
     *   where: {
     *     // ... the filter for the Candidaturas we want to count
     *   }
     * })
    **/
    count<T extends CandidaturaCountArgs>(
      args?: Subset<T, CandidaturaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CandidaturaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Candidatura.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidaturaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CandidaturaAggregateArgs>(args: Subset<T, CandidaturaAggregateArgs>): Prisma.PrismaPromise<GetCandidaturaAggregateType<T>>

    /**
     * Group by Candidatura.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidaturaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CandidaturaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CandidaturaGroupByArgs['orderBy'] }
        : { orderBy?: CandidaturaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CandidaturaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCandidaturaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Candidatura model
   */
  readonly fields: CandidaturaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Candidatura.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CandidaturaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Card<T extends CardDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CardDefaultArgs<ExtArgs>>): Prisma__CardClient<$Result.GetResult<Prisma.$CardPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Prestador<T extends PrestadorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PrestadorDefaultArgs<ExtArgs>>): Prisma__PrestadorClient<$Result.GetResult<Prisma.$PrestadorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Candidatura model
   */
  interface CandidaturaFieldRefs {
    readonly id_candidatura: FieldRef<"Candidatura", 'Int'>
    readonly id_pedido: FieldRef<"Candidatura", 'String'>
    readonly prestador_id: FieldRef<"Candidatura", 'Int'>
    readonly valor_negociado: FieldRef<"Candidatura", 'String'>
    readonly horario_negociado: FieldRef<"Candidatura", 'String'>
    readonly status: FieldRef<"Candidatura", 'String'>
    readonly data_candidatura: FieldRef<"Candidatura", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Candidatura findUnique
   */
  export type CandidaturaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidatura
     */
    select?: CandidaturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Candidatura
     */
    omit?: CandidaturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidaturaInclude<ExtArgs> | null
    /**
     * Filter, which Candidatura to fetch.
     */
    where: CandidaturaWhereUniqueInput
  }

  /**
   * Candidatura findUniqueOrThrow
   */
  export type CandidaturaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidatura
     */
    select?: CandidaturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Candidatura
     */
    omit?: CandidaturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidaturaInclude<ExtArgs> | null
    /**
     * Filter, which Candidatura to fetch.
     */
    where: CandidaturaWhereUniqueInput
  }

  /**
   * Candidatura findFirst
   */
  export type CandidaturaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidatura
     */
    select?: CandidaturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Candidatura
     */
    omit?: CandidaturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidaturaInclude<ExtArgs> | null
    /**
     * Filter, which Candidatura to fetch.
     */
    where?: CandidaturaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Candidaturas to fetch.
     */
    orderBy?: CandidaturaOrderByWithRelationInput | CandidaturaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Candidaturas.
     */
    cursor?: CandidaturaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Candidaturas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Candidaturas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Candidaturas.
     */
    distinct?: CandidaturaScalarFieldEnum | CandidaturaScalarFieldEnum[]
  }

  /**
   * Candidatura findFirstOrThrow
   */
  export type CandidaturaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidatura
     */
    select?: CandidaturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Candidatura
     */
    omit?: CandidaturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidaturaInclude<ExtArgs> | null
    /**
     * Filter, which Candidatura to fetch.
     */
    where?: CandidaturaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Candidaturas to fetch.
     */
    orderBy?: CandidaturaOrderByWithRelationInput | CandidaturaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Candidaturas.
     */
    cursor?: CandidaturaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Candidaturas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Candidaturas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Candidaturas.
     */
    distinct?: CandidaturaScalarFieldEnum | CandidaturaScalarFieldEnum[]
  }

  /**
   * Candidatura findMany
   */
  export type CandidaturaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidatura
     */
    select?: CandidaturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Candidatura
     */
    omit?: CandidaturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidaturaInclude<ExtArgs> | null
    /**
     * Filter, which Candidaturas to fetch.
     */
    where?: CandidaturaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Candidaturas to fetch.
     */
    orderBy?: CandidaturaOrderByWithRelationInput | CandidaturaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Candidaturas.
     */
    cursor?: CandidaturaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Candidaturas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Candidaturas.
     */
    skip?: number
    distinct?: CandidaturaScalarFieldEnum | CandidaturaScalarFieldEnum[]
  }

  /**
   * Candidatura create
   */
  export type CandidaturaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidatura
     */
    select?: CandidaturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Candidatura
     */
    omit?: CandidaturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidaturaInclude<ExtArgs> | null
    /**
     * The data needed to create a Candidatura.
     */
    data: XOR<CandidaturaCreateInput, CandidaturaUncheckedCreateInput>
  }

  /**
   * Candidatura createMany
   */
  export type CandidaturaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Candidaturas.
     */
    data: CandidaturaCreateManyInput | CandidaturaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Candidatura update
   */
  export type CandidaturaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidatura
     */
    select?: CandidaturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Candidatura
     */
    omit?: CandidaturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidaturaInclude<ExtArgs> | null
    /**
     * The data needed to update a Candidatura.
     */
    data: XOR<CandidaturaUpdateInput, CandidaturaUncheckedUpdateInput>
    /**
     * Choose, which Candidatura to update.
     */
    where: CandidaturaWhereUniqueInput
  }

  /**
   * Candidatura updateMany
   */
  export type CandidaturaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Candidaturas.
     */
    data: XOR<CandidaturaUpdateManyMutationInput, CandidaturaUncheckedUpdateManyInput>
    /**
     * Filter which Candidaturas to update
     */
    where?: CandidaturaWhereInput
    /**
     * Limit how many Candidaturas to update.
     */
    limit?: number
  }

  /**
   * Candidatura upsert
   */
  export type CandidaturaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidatura
     */
    select?: CandidaturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Candidatura
     */
    omit?: CandidaturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidaturaInclude<ExtArgs> | null
    /**
     * The filter to search for the Candidatura to update in case it exists.
     */
    where: CandidaturaWhereUniqueInput
    /**
     * In case the Candidatura found by the `where` argument doesn't exist, create a new Candidatura with this data.
     */
    create: XOR<CandidaturaCreateInput, CandidaturaUncheckedCreateInput>
    /**
     * In case the Candidatura was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CandidaturaUpdateInput, CandidaturaUncheckedUpdateInput>
  }

  /**
   * Candidatura delete
   */
  export type CandidaturaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidatura
     */
    select?: CandidaturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Candidatura
     */
    omit?: CandidaturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidaturaInclude<ExtArgs> | null
    /**
     * Filter which Candidatura to delete.
     */
    where: CandidaturaWhereUniqueInput
  }

  /**
   * Candidatura deleteMany
   */
  export type CandidaturaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Candidaturas to delete
     */
    where?: CandidaturaWhereInput
    /**
     * Limit how many Candidaturas to delete.
     */
    limit?: number
  }

  /**
   * Candidatura without action
   */
  export type CandidaturaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidatura
     */
    select?: CandidaturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Candidatura
     */
    omit?: CandidaturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidaturaInclude<ExtArgs> | null
  }


  /**
   * Model Card
   */

  export type AggregateCard = {
    _count: CardCountAggregateOutputType | null
    _avg: CardAvgAggregateOutputType | null
    _sum: CardSumAggregateOutputType | null
    _min: CardMinAggregateOutputType | null
    _max: CardMaxAggregateOutputType | null
  }

  export type CardAvgAggregateOutputType = {
    id_cliente: number | null
    id_prestador: number | null
  }

  export type CardSumAggregateOutputType = {
    id_cliente: number | null
    id_prestador: number | null
  }

  export type CardMinAggregateOutputType = {
    id_pedido: string | null
    id_cliente: number | null
    id_prestador: number | null
    categoria: string | null
    subcategoria: string | null
    valor: string | null
    horario_preferencial: string | null
    valor_negociado: string | null
    horario_negociado: string | null
    status: boolean | null
    codigo_confirmacao: string | null
    data_finalizacao: string | null
    status_pedido: string | null
    cep: string | null
    street: string | null
    neighborhood: string | null
    city: string | null
    state: string | null
    number: string | null
    complement: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CardMaxAggregateOutputType = {
    id_pedido: string | null
    id_cliente: number | null
    id_prestador: number | null
    categoria: string | null
    subcategoria: string | null
    valor: string | null
    horario_preferencial: string | null
    valor_negociado: string | null
    horario_negociado: string | null
    status: boolean | null
    codigo_confirmacao: string | null
    data_finalizacao: string | null
    status_pedido: string | null
    cep: string | null
    street: string | null
    neighborhood: string | null
    city: string | null
    state: string | null
    number: string | null
    complement: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CardCountAggregateOutputType = {
    id_pedido: number
    id_cliente: number
    id_prestador: number
    categoria: number
    subcategoria: number
    valor: number
    horario_preferencial: number
    valor_negociado: number
    horario_negociado: number
    status: number
    codigo_confirmacao: number
    data_finalizacao: number
    status_pedido: number
    cep: number
    street: number
    neighborhood: number
    city: number
    state: number
    number: number
    complement: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CardAvgAggregateInputType = {
    id_cliente?: true
    id_prestador?: true
  }

  export type CardSumAggregateInputType = {
    id_cliente?: true
    id_prestador?: true
  }

  export type CardMinAggregateInputType = {
    id_pedido?: true
    id_cliente?: true
    id_prestador?: true
    categoria?: true
    subcategoria?: true
    valor?: true
    horario_preferencial?: true
    valor_negociado?: true
    horario_negociado?: true
    status?: true
    codigo_confirmacao?: true
    data_finalizacao?: true
    status_pedido?: true
    cep?: true
    street?: true
    neighborhood?: true
    city?: true
    state?: true
    number?: true
    complement?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CardMaxAggregateInputType = {
    id_pedido?: true
    id_cliente?: true
    id_prestador?: true
    categoria?: true
    subcategoria?: true
    valor?: true
    horario_preferencial?: true
    valor_negociado?: true
    horario_negociado?: true
    status?: true
    codigo_confirmacao?: true
    data_finalizacao?: true
    status_pedido?: true
    cep?: true
    street?: true
    neighborhood?: true
    city?: true
    state?: true
    number?: true
    complement?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CardCountAggregateInputType = {
    id_pedido?: true
    id_cliente?: true
    id_prestador?: true
    categoria?: true
    subcategoria?: true
    valor?: true
    horario_preferencial?: true
    valor_negociado?: true
    horario_negociado?: true
    status?: true
    codigo_confirmacao?: true
    data_finalizacao?: true
    status_pedido?: true
    cep?: true
    street?: true
    neighborhood?: true
    city?: true
    state?: true
    number?: true
    complement?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CardAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Card to aggregate.
     */
    where?: CardWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cards to fetch.
     */
    orderBy?: CardOrderByWithRelationInput | CardOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CardWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cards from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cards.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Cards
    **/
    _count?: true | CardCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CardAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CardSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CardMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CardMaxAggregateInputType
  }

  export type GetCardAggregateType<T extends CardAggregateArgs> = {
        [P in keyof T & keyof AggregateCard]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCard[P]>
      : GetScalarType<T[P], AggregateCard[P]>
  }




  export type CardGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CardWhereInput
    orderBy?: CardOrderByWithAggregationInput | CardOrderByWithAggregationInput[]
    by: CardScalarFieldEnum[] | CardScalarFieldEnum
    having?: CardScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CardCountAggregateInputType | true
    _avg?: CardAvgAggregateInputType
    _sum?: CardSumAggregateInputType
    _min?: CardMinAggregateInputType
    _max?: CardMaxAggregateInputType
  }

  export type CardGroupByOutputType = {
    id_pedido: string
    id_cliente: number
    id_prestador: number | null
    categoria: string
    subcategoria: string
    valor: string
    horario_preferencial: string
    valor_negociado: string | null
    horario_negociado: string | null
    status: boolean | null
    codigo_confirmacao: string | null
    data_finalizacao: string | null
    status_pedido: string
    cep: string
    street: string
    neighborhood: string
    city: string
    state: string
    number: string
    complement: string | null
    createdAt: Date
    updatedAt: Date
    _count: CardCountAggregateOutputType | null
    _avg: CardAvgAggregateOutputType | null
    _sum: CardSumAggregateOutputType | null
    _min: CardMinAggregateOutputType | null
    _max: CardMaxAggregateOutputType | null
  }

  type GetCardGroupByPayload<T extends CardGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CardGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CardGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CardGroupByOutputType[P]>
            : GetScalarType<T[P], CardGroupByOutputType[P]>
        }
      >
    >


  export type CardSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_pedido?: boolean
    id_cliente?: boolean
    id_prestador?: boolean
    categoria?: boolean
    subcategoria?: boolean
    valor?: boolean
    horario_preferencial?: boolean
    valor_negociado?: boolean
    horario_negociado?: boolean
    status?: boolean
    codigo_confirmacao?: boolean
    data_finalizacao?: boolean
    status_pedido?: boolean
    cep?: boolean
    street?: boolean
    neighborhood?: boolean
    city?: boolean
    state?: boolean
    number?: boolean
    complement?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    Prestador?: boolean | Card$PrestadorArgs<ExtArgs>
    Candidatura?: boolean | Card$CandidaturaArgs<ExtArgs>
    _count?: boolean | CardCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["card"]>



  export type CardSelectScalar = {
    id_pedido?: boolean
    id_cliente?: boolean
    id_prestador?: boolean
    categoria?: boolean
    subcategoria?: boolean
    valor?: boolean
    horario_preferencial?: boolean
    valor_negociado?: boolean
    horario_negociado?: boolean
    status?: boolean
    codigo_confirmacao?: boolean
    data_finalizacao?: boolean
    status_pedido?: boolean
    cep?: boolean
    street?: boolean
    neighborhood?: boolean
    city?: boolean
    state?: boolean
    number?: boolean
    complement?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CardOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_pedido" | "id_cliente" | "id_prestador" | "categoria" | "subcategoria" | "valor" | "horario_preferencial" | "valor_negociado" | "horario_negociado" | "status" | "codigo_confirmacao" | "data_finalizacao" | "status_pedido" | "cep" | "street" | "neighborhood" | "city" | "state" | "number" | "complement" | "createdAt" | "updatedAt", ExtArgs["result"]["card"]>
  export type CardInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    Prestador?: boolean | Card$PrestadorArgs<ExtArgs>
    Candidatura?: boolean | Card$CandidaturaArgs<ExtArgs>
    _count?: boolean | CardCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $CardPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Card"
    objects: {
      Cliente: Prisma.$ClientePayload<ExtArgs>
      Prestador: Prisma.$PrestadorPayload<ExtArgs> | null
      Candidatura: Prisma.$CandidaturaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_pedido: string
      id_cliente: number
      id_prestador: number | null
      categoria: string
      subcategoria: string
      valor: string
      horario_preferencial: string
      valor_negociado: string | null
      horario_negociado: string | null
      status: boolean | null
      codigo_confirmacao: string | null
      data_finalizacao: string | null
      status_pedido: string
      cep: string
      street: string
      neighborhood: string
      city: string
      state: string
      number: string
      complement: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["card"]>
    composites: {}
  }

  type CardGetPayload<S extends boolean | null | undefined | CardDefaultArgs> = $Result.GetResult<Prisma.$CardPayload, S>

  type CardCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CardFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CardCountAggregateInputType | true
    }

  export interface CardDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Card'], meta: { name: 'Card' } }
    /**
     * Find zero or one Card that matches the filter.
     * @param {CardFindUniqueArgs} args - Arguments to find a Card
     * @example
     * // Get one Card
     * const card = await prisma.card.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CardFindUniqueArgs>(args: SelectSubset<T, CardFindUniqueArgs<ExtArgs>>): Prisma__CardClient<$Result.GetResult<Prisma.$CardPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Card that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CardFindUniqueOrThrowArgs} args - Arguments to find a Card
     * @example
     * // Get one Card
     * const card = await prisma.card.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CardFindUniqueOrThrowArgs>(args: SelectSubset<T, CardFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CardClient<$Result.GetResult<Prisma.$CardPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Card that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CardFindFirstArgs} args - Arguments to find a Card
     * @example
     * // Get one Card
     * const card = await prisma.card.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CardFindFirstArgs>(args?: SelectSubset<T, CardFindFirstArgs<ExtArgs>>): Prisma__CardClient<$Result.GetResult<Prisma.$CardPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Card that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CardFindFirstOrThrowArgs} args - Arguments to find a Card
     * @example
     * // Get one Card
     * const card = await prisma.card.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CardFindFirstOrThrowArgs>(args?: SelectSubset<T, CardFindFirstOrThrowArgs<ExtArgs>>): Prisma__CardClient<$Result.GetResult<Prisma.$CardPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cards that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CardFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cards
     * const cards = await prisma.card.findMany()
     * 
     * // Get first 10 Cards
     * const cards = await prisma.card.findMany({ take: 10 })
     * 
     * // Only select the `id_pedido`
     * const cardWithId_pedidoOnly = await prisma.card.findMany({ select: { id_pedido: true } })
     * 
     */
    findMany<T extends CardFindManyArgs>(args?: SelectSubset<T, CardFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CardPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Card.
     * @param {CardCreateArgs} args - Arguments to create a Card.
     * @example
     * // Create one Card
     * const Card = await prisma.card.create({
     *   data: {
     *     // ... data to create a Card
     *   }
     * })
     * 
     */
    create<T extends CardCreateArgs>(args: SelectSubset<T, CardCreateArgs<ExtArgs>>): Prisma__CardClient<$Result.GetResult<Prisma.$CardPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cards.
     * @param {CardCreateManyArgs} args - Arguments to create many Cards.
     * @example
     * // Create many Cards
     * const card = await prisma.card.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CardCreateManyArgs>(args?: SelectSubset<T, CardCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Card.
     * @param {CardDeleteArgs} args - Arguments to delete one Card.
     * @example
     * // Delete one Card
     * const Card = await prisma.card.delete({
     *   where: {
     *     // ... filter to delete one Card
     *   }
     * })
     * 
     */
    delete<T extends CardDeleteArgs>(args: SelectSubset<T, CardDeleteArgs<ExtArgs>>): Prisma__CardClient<$Result.GetResult<Prisma.$CardPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Card.
     * @param {CardUpdateArgs} args - Arguments to update one Card.
     * @example
     * // Update one Card
     * const card = await prisma.card.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CardUpdateArgs>(args: SelectSubset<T, CardUpdateArgs<ExtArgs>>): Prisma__CardClient<$Result.GetResult<Prisma.$CardPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cards.
     * @param {CardDeleteManyArgs} args - Arguments to filter Cards to delete.
     * @example
     * // Delete a few Cards
     * const { count } = await prisma.card.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CardDeleteManyArgs>(args?: SelectSubset<T, CardDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cards.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CardUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cards
     * const card = await prisma.card.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CardUpdateManyArgs>(args: SelectSubset<T, CardUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Card.
     * @param {CardUpsertArgs} args - Arguments to update or create a Card.
     * @example
     * // Update or create a Card
     * const card = await prisma.card.upsert({
     *   create: {
     *     // ... data to create a Card
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Card we want to update
     *   }
     * })
     */
    upsert<T extends CardUpsertArgs>(args: SelectSubset<T, CardUpsertArgs<ExtArgs>>): Prisma__CardClient<$Result.GetResult<Prisma.$CardPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cards.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CardCountArgs} args - Arguments to filter Cards to count.
     * @example
     * // Count the number of Cards
     * const count = await prisma.card.count({
     *   where: {
     *     // ... the filter for the Cards we want to count
     *   }
     * })
    **/
    count<T extends CardCountArgs>(
      args?: Subset<T, CardCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CardCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Card.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CardAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CardAggregateArgs>(args: Subset<T, CardAggregateArgs>): Prisma.PrismaPromise<GetCardAggregateType<T>>

    /**
     * Group by Card.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CardGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CardGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CardGroupByArgs['orderBy'] }
        : { orderBy?: CardGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CardGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCardGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Card model
   */
  readonly fields: CardFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Card.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CardClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Cliente<T extends ClienteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClienteDefaultArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Prestador<T extends Card$PrestadorArgs<ExtArgs> = {}>(args?: Subset<T, Card$PrestadorArgs<ExtArgs>>): Prisma__PrestadorClient<$Result.GetResult<Prisma.$PrestadorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Candidatura<T extends Card$CandidaturaArgs<ExtArgs> = {}>(args?: Subset<T, Card$CandidaturaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CandidaturaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Card model
   */
  interface CardFieldRefs {
    readonly id_pedido: FieldRef<"Card", 'String'>
    readonly id_cliente: FieldRef<"Card", 'Int'>
    readonly id_prestador: FieldRef<"Card", 'Int'>
    readonly categoria: FieldRef<"Card", 'String'>
    readonly subcategoria: FieldRef<"Card", 'String'>
    readonly valor: FieldRef<"Card", 'String'>
    readonly horario_preferencial: FieldRef<"Card", 'String'>
    readonly valor_negociado: FieldRef<"Card", 'String'>
    readonly horario_negociado: FieldRef<"Card", 'String'>
    readonly status: FieldRef<"Card", 'Boolean'>
    readonly codigo_confirmacao: FieldRef<"Card", 'String'>
    readonly data_finalizacao: FieldRef<"Card", 'String'>
    readonly status_pedido: FieldRef<"Card", 'String'>
    readonly cep: FieldRef<"Card", 'String'>
    readonly street: FieldRef<"Card", 'String'>
    readonly neighborhood: FieldRef<"Card", 'String'>
    readonly city: FieldRef<"Card", 'String'>
    readonly state: FieldRef<"Card", 'String'>
    readonly number: FieldRef<"Card", 'String'>
    readonly complement: FieldRef<"Card", 'String'>
    readonly createdAt: FieldRef<"Card", 'DateTime'>
    readonly updatedAt: FieldRef<"Card", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Card findUnique
   */
  export type CardFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Card
     */
    select?: CardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Card
     */
    omit?: CardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CardInclude<ExtArgs> | null
    /**
     * Filter, which Card to fetch.
     */
    where: CardWhereUniqueInput
  }

  /**
   * Card findUniqueOrThrow
   */
  export type CardFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Card
     */
    select?: CardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Card
     */
    omit?: CardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CardInclude<ExtArgs> | null
    /**
     * Filter, which Card to fetch.
     */
    where: CardWhereUniqueInput
  }

  /**
   * Card findFirst
   */
  export type CardFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Card
     */
    select?: CardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Card
     */
    omit?: CardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CardInclude<ExtArgs> | null
    /**
     * Filter, which Card to fetch.
     */
    where?: CardWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cards to fetch.
     */
    orderBy?: CardOrderByWithRelationInput | CardOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cards.
     */
    cursor?: CardWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cards from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cards.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cards.
     */
    distinct?: CardScalarFieldEnum | CardScalarFieldEnum[]
  }

  /**
   * Card findFirstOrThrow
   */
  export type CardFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Card
     */
    select?: CardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Card
     */
    omit?: CardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CardInclude<ExtArgs> | null
    /**
     * Filter, which Card to fetch.
     */
    where?: CardWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cards to fetch.
     */
    orderBy?: CardOrderByWithRelationInput | CardOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cards.
     */
    cursor?: CardWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cards from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cards.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cards.
     */
    distinct?: CardScalarFieldEnum | CardScalarFieldEnum[]
  }

  /**
   * Card findMany
   */
  export type CardFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Card
     */
    select?: CardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Card
     */
    omit?: CardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CardInclude<ExtArgs> | null
    /**
     * Filter, which Cards to fetch.
     */
    where?: CardWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cards to fetch.
     */
    orderBy?: CardOrderByWithRelationInput | CardOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Cards.
     */
    cursor?: CardWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cards from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cards.
     */
    skip?: number
    distinct?: CardScalarFieldEnum | CardScalarFieldEnum[]
  }

  /**
   * Card create
   */
  export type CardCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Card
     */
    select?: CardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Card
     */
    omit?: CardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CardInclude<ExtArgs> | null
    /**
     * The data needed to create a Card.
     */
    data: XOR<CardCreateInput, CardUncheckedCreateInput>
  }

  /**
   * Card createMany
   */
  export type CardCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Cards.
     */
    data: CardCreateManyInput | CardCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Card update
   */
  export type CardUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Card
     */
    select?: CardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Card
     */
    omit?: CardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CardInclude<ExtArgs> | null
    /**
     * The data needed to update a Card.
     */
    data: XOR<CardUpdateInput, CardUncheckedUpdateInput>
    /**
     * Choose, which Card to update.
     */
    where: CardWhereUniqueInput
  }

  /**
   * Card updateMany
   */
  export type CardUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Cards.
     */
    data: XOR<CardUpdateManyMutationInput, CardUncheckedUpdateManyInput>
    /**
     * Filter which Cards to update
     */
    where?: CardWhereInput
    /**
     * Limit how many Cards to update.
     */
    limit?: number
  }

  /**
   * Card upsert
   */
  export type CardUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Card
     */
    select?: CardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Card
     */
    omit?: CardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CardInclude<ExtArgs> | null
    /**
     * The filter to search for the Card to update in case it exists.
     */
    where: CardWhereUniqueInput
    /**
     * In case the Card found by the `where` argument doesn't exist, create a new Card with this data.
     */
    create: XOR<CardCreateInput, CardUncheckedCreateInput>
    /**
     * In case the Card was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CardUpdateInput, CardUncheckedUpdateInput>
  }

  /**
   * Card delete
   */
  export type CardDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Card
     */
    select?: CardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Card
     */
    omit?: CardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CardInclude<ExtArgs> | null
    /**
     * Filter which Card to delete.
     */
    where: CardWhereUniqueInput
  }

  /**
   * Card deleteMany
   */
  export type CardDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cards to delete
     */
    where?: CardWhereInput
    /**
     * Limit how many Cards to delete.
     */
    limit?: number
  }

  /**
   * Card.Prestador
   */
  export type Card$PrestadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prestador
     */
    select?: PrestadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prestador
     */
    omit?: PrestadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrestadorInclude<ExtArgs> | null
    where?: PrestadorWhereInput
  }

  /**
   * Card.Candidatura
   */
  export type Card$CandidaturaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidatura
     */
    select?: CandidaturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Candidatura
     */
    omit?: CandidaturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidaturaInclude<ExtArgs> | null
    where?: CandidaturaWhereInput
    orderBy?: CandidaturaOrderByWithRelationInput | CandidaturaOrderByWithRelationInput[]
    cursor?: CandidaturaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CandidaturaScalarFieldEnum | CandidaturaScalarFieldEnum[]
  }

  /**
   * Card without action
   */
  export type CardDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Card
     */
    select?: CardSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Card
     */
    omit?: CardOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CardInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ClienteScalarFieldEnum: {
    id_cliente: 'id_cliente',
    telefone: 'telefone',
    nome: 'nome',
    sobrenome: 'sobrenome',
    cpf: 'cpf',
    data_nascimento: 'data_nascimento',
    email: 'email',
    password: 'password',
    endereco_estado: 'endereco_estado',
    endereco_cidade: 'endereco_cidade',
    endereco_bairro: 'endereco_bairro',
    endereco_rua: 'endereco_rua',
    endereco_numero: 'endereco_numero',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type ClienteScalarFieldEnum = (typeof ClienteScalarFieldEnum)[keyof typeof ClienteScalarFieldEnum]


  export const PrestadorScalarFieldEnum: {
    id_prestador: 'id_prestador',
    telefone: 'telefone',
    nome: 'nome',
    sobrenome: 'sobrenome',
    cpf: 'cpf',
    data_nascimento: 'data_nascimento',
    email: 'email',
    password: 'password',
    endereco_estado: 'endereco_estado',
    endereco_cidade: 'endereco_cidade',
    endereco_bairro: 'endereco_bairro',
    endereco_rua: 'endereco_rua',
    endereco_numero: 'endereco_numero',
    especializacao: 'especializacao',
    descricao: 'descricao',
    avaliacao: 'avaliacao',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type PrestadorScalarFieldEnum = (typeof PrestadorScalarFieldEnum)[keyof typeof PrestadorScalarFieldEnum]


  export const CandidaturaScalarFieldEnum: {
    id_candidatura: 'id_candidatura',
    id_pedido: 'id_pedido',
    prestador_id: 'prestador_id',
    valor_negociado: 'valor_negociado',
    horario_negociado: 'horario_negociado',
    status: 'status',
    data_candidatura: 'data_candidatura'
  };

  export type CandidaturaScalarFieldEnum = (typeof CandidaturaScalarFieldEnum)[keyof typeof CandidaturaScalarFieldEnum]


  export const CardScalarFieldEnum: {
    id_pedido: 'id_pedido',
    id_cliente: 'id_cliente',
    id_prestador: 'id_prestador',
    categoria: 'categoria',
    subcategoria: 'subcategoria',
    valor: 'valor',
    horario_preferencial: 'horario_preferencial',
    valor_negociado: 'valor_negociado',
    horario_negociado: 'horario_negociado',
    status: 'status',
    codigo_confirmacao: 'codigo_confirmacao',
    data_finalizacao: 'data_finalizacao',
    status_pedido: 'status_pedido',
    cep: 'cep',
    street: 'street',
    neighborhood: 'neighborhood',
    city: 'city',
    state: 'state',
    number: 'number',
    complement: 'complement',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CardScalarFieldEnum = (typeof CardScalarFieldEnum)[keyof typeof CardScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const ClienteOrderByRelevanceFieldEnum: {
    telefone: 'telefone',
    nome: 'nome',
    sobrenome: 'sobrenome',
    cpf: 'cpf',
    data_nascimento: 'data_nascimento',
    email: 'email',
    password: 'password',
    endereco_estado: 'endereco_estado',
    endereco_cidade: 'endereco_cidade',
    endereco_bairro: 'endereco_bairro',
    endereco_rua: 'endereco_rua',
    endereco_numero: 'endereco_numero'
  };

  export type ClienteOrderByRelevanceFieldEnum = (typeof ClienteOrderByRelevanceFieldEnum)[keyof typeof ClienteOrderByRelevanceFieldEnum]


  export const PrestadorOrderByRelevanceFieldEnum: {
    telefone: 'telefone',
    nome: 'nome',
    sobrenome: 'sobrenome',
    cpf: 'cpf',
    data_nascimento: 'data_nascimento',
    email: 'email',
    password: 'password',
    endereco_estado: 'endereco_estado',
    endereco_cidade: 'endereco_cidade',
    endereco_bairro: 'endereco_bairro',
    endereco_rua: 'endereco_rua',
    endereco_numero: 'endereco_numero',
    especializacao: 'especializacao',
    descricao: 'descricao',
    avaliacao: 'avaliacao'
  };

  export type PrestadorOrderByRelevanceFieldEnum = (typeof PrestadorOrderByRelevanceFieldEnum)[keyof typeof PrestadorOrderByRelevanceFieldEnum]


  export const CandidaturaOrderByRelevanceFieldEnum: {
    id_pedido: 'id_pedido',
    valor_negociado: 'valor_negociado',
    horario_negociado: 'horario_negociado',
    status: 'status'
  };

  export type CandidaturaOrderByRelevanceFieldEnum = (typeof CandidaturaOrderByRelevanceFieldEnum)[keyof typeof CandidaturaOrderByRelevanceFieldEnum]


  export const CardOrderByRelevanceFieldEnum: {
    id_pedido: 'id_pedido',
    categoria: 'categoria',
    subcategoria: 'subcategoria',
    valor: 'valor',
    horario_preferencial: 'horario_preferencial',
    valor_negociado: 'valor_negociado',
    horario_negociado: 'horario_negociado',
    codigo_confirmacao: 'codigo_confirmacao',
    data_finalizacao: 'data_finalizacao',
    status_pedido: 'status_pedido',
    cep: 'cep',
    street: 'street',
    neighborhood: 'neighborhood',
    city: 'city',
    state: 'state',
    number: 'number',
    complement: 'complement'
  };

  export type CardOrderByRelevanceFieldEnum = (typeof CardOrderByRelevanceFieldEnum)[keyof typeof CardOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type ClienteWhereInput = {
    AND?: ClienteWhereInput | ClienteWhereInput[]
    OR?: ClienteWhereInput[]
    NOT?: ClienteWhereInput | ClienteWhereInput[]
    id_cliente?: IntFilter<"Cliente"> | number
    telefone?: StringNullableFilter<"Cliente"> | string | null
    nome?: StringFilter<"Cliente"> | string
    sobrenome?: StringFilter<"Cliente"> | string
    cpf?: StringNullableFilter<"Cliente"> | string | null
    data_nascimento?: StringNullableFilter<"Cliente"> | string | null
    email?: StringFilter<"Cliente"> | string
    password?: StringFilter<"Cliente"> | string
    endereco_estado?: StringNullableFilter<"Cliente"> | string | null
    endereco_cidade?: StringNullableFilter<"Cliente"> | string | null
    endereco_bairro?: StringNullableFilter<"Cliente"> | string | null
    endereco_rua?: StringNullableFilter<"Cliente"> | string | null
    endereco_numero?: StringNullableFilter<"Cliente"> | string | null
    created_at?: DateTimeFilter<"Cliente"> | Date | string
    updated_at?: DateTimeFilter<"Cliente"> | Date | string
    Card?: CardListRelationFilter
  }

  export type ClienteOrderByWithRelationInput = {
    id_cliente?: SortOrder
    telefone?: SortOrderInput | SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    cpf?: SortOrderInput | SortOrder
    data_nascimento?: SortOrderInput | SortOrder
    email?: SortOrder
    password?: SortOrder
    endereco_estado?: SortOrderInput | SortOrder
    endereco_cidade?: SortOrderInput | SortOrder
    endereco_bairro?: SortOrderInput | SortOrder
    endereco_rua?: SortOrderInput | SortOrder
    endereco_numero?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    Card?: CardOrderByRelationAggregateInput
    _relevance?: ClienteOrderByRelevanceInput
  }

  export type ClienteWhereUniqueInput = Prisma.AtLeast<{
    id_cliente?: number
    cpf?: string
    email?: string
    AND?: ClienteWhereInput | ClienteWhereInput[]
    OR?: ClienteWhereInput[]
    NOT?: ClienteWhereInput | ClienteWhereInput[]
    telefone?: StringNullableFilter<"Cliente"> | string | null
    nome?: StringFilter<"Cliente"> | string
    sobrenome?: StringFilter<"Cliente"> | string
    data_nascimento?: StringNullableFilter<"Cliente"> | string | null
    password?: StringFilter<"Cliente"> | string
    endereco_estado?: StringNullableFilter<"Cliente"> | string | null
    endereco_cidade?: StringNullableFilter<"Cliente"> | string | null
    endereco_bairro?: StringNullableFilter<"Cliente"> | string | null
    endereco_rua?: StringNullableFilter<"Cliente"> | string | null
    endereco_numero?: StringNullableFilter<"Cliente"> | string | null
    created_at?: DateTimeFilter<"Cliente"> | Date | string
    updated_at?: DateTimeFilter<"Cliente"> | Date | string
    Card?: CardListRelationFilter
  }, "id_cliente" | "cpf" | "email">

  export type ClienteOrderByWithAggregationInput = {
    id_cliente?: SortOrder
    telefone?: SortOrderInput | SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    cpf?: SortOrderInput | SortOrder
    data_nascimento?: SortOrderInput | SortOrder
    email?: SortOrder
    password?: SortOrder
    endereco_estado?: SortOrderInput | SortOrder
    endereco_cidade?: SortOrderInput | SortOrder
    endereco_bairro?: SortOrderInput | SortOrder
    endereco_rua?: SortOrderInput | SortOrder
    endereco_numero?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: ClienteCountOrderByAggregateInput
    _avg?: ClienteAvgOrderByAggregateInput
    _max?: ClienteMaxOrderByAggregateInput
    _min?: ClienteMinOrderByAggregateInput
    _sum?: ClienteSumOrderByAggregateInput
  }

  export type ClienteScalarWhereWithAggregatesInput = {
    AND?: ClienteScalarWhereWithAggregatesInput | ClienteScalarWhereWithAggregatesInput[]
    OR?: ClienteScalarWhereWithAggregatesInput[]
    NOT?: ClienteScalarWhereWithAggregatesInput | ClienteScalarWhereWithAggregatesInput[]
    id_cliente?: IntWithAggregatesFilter<"Cliente"> | number
    telefone?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    nome?: StringWithAggregatesFilter<"Cliente"> | string
    sobrenome?: StringWithAggregatesFilter<"Cliente"> | string
    cpf?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    data_nascimento?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    email?: StringWithAggregatesFilter<"Cliente"> | string
    password?: StringWithAggregatesFilter<"Cliente"> | string
    endereco_estado?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    endereco_cidade?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    endereco_bairro?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    endereco_rua?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    endereco_numero?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"Cliente"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Cliente"> | Date | string
  }

  export type PrestadorWhereInput = {
    AND?: PrestadorWhereInput | PrestadorWhereInput[]
    OR?: PrestadorWhereInput[]
    NOT?: PrestadorWhereInput | PrestadorWhereInput[]
    id_prestador?: IntFilter<"Prestador"> | number
    telefone?: StringNullableFilter<"Prestador"> | string | null
    nome?: StringFilter<"Prestador"> | string
    sobrenome?: StringFilter<"Prestador"> | string
    cpf?: StringNullableFilter<"Prestador"> | string | null
    data_nascimento?: StringNullableFilter<"Prestador"> | string | null
    email?: StringFilter<"Prestador"> | string
    password?: StringFilter<"Prestador"> | string
    endereco_estado?: StringNullableFilter<"Prestador"> | string | null
    endereco_cidade?: StringNullableFilter<"Prestador"> | string | null
    endereco_bairro?: StringNullableFilter<"Prestador"> | string | null
    endereco_rua?: StringNullableFilter<"Prestador"> | string | null
    endereco_numero?: StringNullableFilter<"Prestador"> | string | null
    especializacao?: StringNullableFilter<"Prestador"> | string | null
    descricao?: StringNullableFilter<"Prestador"> | string | null
    avaliacao?: StringNullableFilter<"Prestador"> | string | null
    created_at?: DateTimeFilter<"Prestador"> | Date | string
    updated_at?: DateTimeFilter<"Prestador"> | Date | string
    Candidatura?: CandidaturaListRelationFilter
    Card?: CardListRelationFilter
  }

  export type PrestadorOrderByWithRelationInput = {
    id_prestador?: SortOrder
    telefone?: SortOrderInput | SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    cpf?: SortOrderInput | SortOrder
    data_nascimento?: SortOrderInput | SortOrder
    email?: SortOrder
    password?: SortOrder
    endereco_estado?: SortOrderInput | SortOrder
    endereco_cidade?: SortOrderInput | SortOrder
    endereco_bairro?: SortOrderInput | SortOrder
    endereco_rua?: SortOrderInput | SortOrder
    endereco_numero?: SortOrderInput | SortOrder
    especializacao?: SortOrderInput | SortOrder
    descricao?: SortOrderInput | SortOrder
    avaliacao?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    Candidatura?: CandidaturaOrderByRelationAggregateInput
    Card?: CardOrderByRelationAggregateInput
    _relevance?: PrestadorOrderByRelevanceInput
  }

  export type PrestadorWhereUniqueInput = Prisma.AtLeast<{
    id_prestador?: number
    cpf?: string
    email?: string
    AND?: PrestadorWhereInput | PrestadorWhereInput[]
    OR?: PrestadorWhereInput[]
    NOT?: PrestadorWhereInput | PrestadorWhereInput[]
    telefone?: StringNullableFilter<"Prestador"> | string | null
    nome?: StringFilter<"Prestador"> | string
    sobrenome?: StringFilter<"Prestador"> | string
    data_nascimento?: StringNullableFilter<"Prestador"> | string | null
    password?: StringFilter<"Prestador"> | string
    endereco_estado?: StringNullableFilter<"Prestador"> | string | null
    endereco_cidade?: StringNullableFilter<"Prestador"> | string | null
    endereco_bairro?: StringNullableFilter<"Prestador"> | string | null
    endereco_rua?: StringNullableFilter<"Prestador"> | string | null
    endereco_numero?: StringNullableFilter<"Prestador"> | string | null
    especializacao?: StringNullableFilter<"Prestador"> | string | null
    descricao?: StringNullableFilter<"Prestador"> | string | null
    avaliacao?: StringNullableFilter<"Prestador"> | string | null
    created_at?: DateTimeFilter<"Prestador"> | Date | string
    updated_at?: DateTimeFilter<"Prestador"> | Date | string
    Candidatura?: CandidaturaListRelationFilter
    Card?: CardListRelationFilter
  }, "id_prestador" | "cpf" | "email">

  export type PrestadorOrderByWithAggregationInput = {
    id_prestador?: SortOrder
    telefone?: SortOrderInput | SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    cpf?: SortOrderInput | SortOrder
    data_nascimento?: SortOrderInput | SortOrder
    email?: SortOrder
    password?: SortOrder
    endereco_estado?: SortOrderInput | SortOrder
    endereco_cidade?: SortOrderInput | SortOrder
    endereco_bairro?: SortOrderInput | SortOrder
    endereco_rua?: SortOrderInput | SortOrder
    endereco_numero?: SortOrderInput | SortOrder
    especializacao?: SortOrderInput | SortOrder
    descricao?: SortOrderInput | SortOrder
    avaliacao?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: PrestadorCountOrderByAggregateInput
    _avg?: PrestadorAvgOrderByAggregateInput
    _max?: PrestadorMaxOrderByAggregateInput
    _min?: PrestadorMinOrderByAggregateInput
    _sum?: PrestadorSumOrderByAggregateInput
  }

  export type PrestadorScalarWhereWithAggregatesInput = {
    AND?: PrestadorScalarWhereWithAggregatesInput | PrestadorScalarWhereWithAggregatesInput[]
    OR?: PrestadorScalarWhereWithAggregatesInput[]
    NOT?: PrestadorScalarWhereWithAggregatesInput | PrestadorScalarWhereWithAggregatesInput[]
    id_prestador?: IntWithAggregatesFilter<"Prestador"> | number
    telefone?: StringNullableWithAggregatesFilter<"Prestador"> | string | null
    nome?: StringWithAggregatesFilter<"Prestador"> | string
    sobrenome?: StringWithAggregatesFilter<"Prestador"> | string
    cpf?: StringNullableWithAggregatesFilter<"Prestador"> | string | null
    data_nascimento?: StringNullableWithAggregatesFilter<"Prestador"> | string | null
    email?: StringWithAggregatesFilter<"Prestador"> | string
    password?: StringWithAggregatesFilter<"Prestador"> | string
    endereco_estado?: StringNullableWithAggregatesFilter<"Prestador"> | string | null
    endereco_cidade?: StringNullableWithAggregatesFilter<"Prestador"> | string | null
    endereco_bairro?: StringNullableWithAggregatesFilter<"Prestador"> | string | null
    endereco_rua?: StringNullableWithAggregatesFilter<"Prestador"> | string | null
    endereco_numero?: StringNullableWithAggregatesFilter<"Prestador"> | string | null
    especializacao?: StringNullableWithAggregatesFilter<"Prestador"> | string | null
    descricao?: StringNullableWithAggregatesFilter<"Prestador"> | string | null
    avaliacao?: StringNullableWithAggregatesFilter<"Prestador"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"Prestador"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Prestador"> | Date | string
  }

  export type CandidaturaWhereInput = {
    AND?: CandidaturaWhereInput | CandidaturaWhereInput[]
    OR?: CandidaturaWhereInput[]
    NOT?: CandidaturaWhereInput | CandidaturaWhereInput[]
    id_candidatura?: IntFilter<"Candidatura"> | number
    id_pedido?: StringFilter<"Candidatura"> | string
    prestador_id?: IntFilter<"Candidatura"> | number
    valor_negociado?: StringNullableFilter<"Candidatura"> | string | null
    horario_negociado?: StringNullableFilter<"Candidatura"> | string | null
    status?: StringNullableFilter<"Candidatura"> | string | null
    data_candidatura?: DateTimeFilter<"Candidatura"> | Date | string
    Card?: XOR<CardScalarRelationFilter, CardWhereInput>
    Prestador?: XOR<PrestadorScalarRelationFilter, PrestadorWhereInput>
  }

  export type CandidaturaOrderByWithRelationInput = {
    id_candidatura?: SortOrder
    id_pedido?: SortOrder
    prestador_id?: SortOrder
    valor_negociado?: SortOrderInput | SortOrder
    horario_negociado?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    data_candidatura?: SortOrder
    Card?: CardOrderByWithRelationInput
    Prestador?: PrestadorOrderByWithRelationInput
    _relevance?: CandidaturaOrderByRelevanceInput
  }

  export type CandidaturaWhereUniqueInput = Prisma.AtLeast<{
    id_candidatura?: number
    id_pedido_prestador_id?: CandidaturaId_pedidoPrestador_idCompoundUniqueInput
    AND?: CandidaturaWhereInput | CandidaturaWhereInput[]
    OR?: CandidaturaWhereInput[]
    NOT?: CandidaturaWhereInput | CandidaturaWhereInput[]
    id_pedido?: StringFilter<"Candidatura"> | string
    prestador_id?: IntFilter<"Candidatura"> | number
    valor_negociado?: StringNullableFilter<"Candidatura"> | string | null
    horario_negociado?: StringNullableFilter<"Candidatura"> | string | null
    status?: StringNullableFilter<"Candidatura"> | string | null
    data_candidatura?: DateTimeFilter<"Candidatura"> | Date | string
    Card?: XOR<CardScalarRelationFilter, CardWhereInput>
    Prestador?: XOR<PrestadorScalarRelationFilter, PrestadorWhereInput>
  }, "id_candidatura" | "id_pedido_prestador_id">

  export type CandidaturaOrderByWithAggregationInput = {
    id_candidatura?: SortOrder
    id_pedido?: SortOrder
    prestador_id?: SortOrder
    valor_negociado?: SortOrderInput | SortOrder
    horario_negociado?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    data_candidatura?: SortOrder
    _count?: CandidaturaCountOrderByAggregateInput
    _avg?: CandidaturaAvgOrderByAggregateInput
    _max?: CandidaturaMaxOrderByAggregateInput
    _min?: CandidaturaMinOrderByAggregateInput
    _sum?: CandidaturaSumOrderByAggregateInput
  }

  export type CandidaturaScalarWhereWithAggregatesInput = {
    AND?: CandidaturaScalarWhereWithAggregatesInput | CandidaturaScalarWhereWithAggregatesInput[]
    OR?: CandidaturaScalarWhereWithAggregatesInput[]
    NOT?: CandidaturaScalarWhereWithAggregatesInput | CandidaturaScalarWhereWithAggregatesInput[]
    id_candidatura?: IntWithAggregatesFilter<"Candidatura"> | number
    id_pedido?: StringWithAggregatesFilter<"Candidatura"> | string
    prestador_id?: IntWithAggregatesFilter<"Candidatura"> | number
    valor_negociado?: StringNullableWithAggregatesFilter<"Candidatura"> | string | null
    horario_negociado?: StringNullableWithAggregatesFilter<"Candidatura"> | string | null
    status?: StringNullableWithAggregatesFilter<"Candidatura"> | string | null
    data_candidatura?: DateTimeWithAggregatesFilter<"Candidatura"> | Date | string
  }

  export type CardWhereInput = {
    AND?: CardWhereInput | CardWhereInput[]
    OR?: CardWhereInput[]
    NOT?: CardWhereInput | CardWhereInput[]
    id_pedido?: StringFilter<"Card"> | string
    id_cliente?: IntFilter<"Card"> | number
    id_prestador?: IntNullableFilter<"Card"> | number | null
    categoria?: StringFilter<"Card"> | string
    subcategoria?: StringFilter<"Card"> | string
    valor?: StringFilter<"Card"> | string
    horario_preferencial?: StringFilter<"Card"> | string
    valor_negociado?: StringNullableFilter<"Card"> | string | null
    horario_negociado?: StringNullableFilter<"Card"> | string | null
    status?: BoolNullableFilter<"Card"> | boolean | null
    codigo_confirmacao?: StringNullableFilter<"Card"> | string | null
    data_finalizacao?: StringNullableFilter<"Card"> | string | null
    status_pedido?: StringFilter<"Card"> | string
    cep?: StringFilter<"Card"> | string
    street?: StringFilter<"Card"> | string
    neighborhood?: StringFilter<"Card"> | string
    city?: StringFilter<"Card"> | string
    state?: StringFilter<"Card"> | string
    number?: StringFilter<"Card"> | string
    complement?: StringNullableFilter<"Card"> | string | null
    createdAt?: DateTimeFilter<"Card"> | Date | string
    updatedAt?: DateTimeFilter<"Card"> | Date | string
    Cliente?: XOR<ClienteScalarRelationFilter, ClienteWhereInput>
    Prestador?: XOR<PrestadorNullableScalarRelationFilter, PrestadorWhereInput> | null
    Candidatura?: CandidaturaListRelationFilter
  }

  export type CardOrderByWithRelationInput = {
    id_pedido?: SortOrder
    id_cliente?: SortOrder
    id_prestador?: SortOrderInput | SortOrder
    categoria?: SortOrder
    subcategoria?: SortOrder
    valor?: SortOrder
    horario_preferencial?: SortOrder
    valor_negociado?: SortOrderInput | SortOrder
    horario_negociado?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    codigo_confirmacao?: SortOrderInput | SortOrder
    data_finalizacao?: SortOrderInput | SortOrder
    status_pedido?: SortOrder
    cep?: SortOrder
    street?: SortOrder
    neighborhood?: SortOrder
    city?: SortOrder
    state?: SortOrder
    number?: SortOrder
    complement?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Cliente?: ClienteOrderByWithRelationInput
    Prestador?: PrestadorOrderByWithRelationInput
    Candidatura?: CandidaturaOrderByRelationAggregateInput
    _relevance?: CardOrderByRelevanceInput
  }

  export type CardWhereUniqueInput = Prisma.AtLeast<{
    id_pedido?: string
    AND?: CardWhereInput | CardWhereInput[]
    OR?: CardWhereInput[]
    NOT?: CardWhereInput | CardWhereInput[]
    id_cliente?: IntFilter<"Card"> | number
    id_prestador?: IntNullableFilter<"Card"> | number | null
    categoria?: StringFilter<"Card"> | string
    subcategoria?: StringFilter<"Card"> | string
    valor?: StringFilter<"Card"> | string
    horario_preferencial?: StringFilter<"Card"> | string
    valor_negociado?: StringNullableFilter<"Card"> | string | null
    horario_negociado?: StringNullableFilter<"Card"> | string | null
    status?: BoolNullableFilter<"Card"> | boolean | null
    codigo_confirmacao?: StringNullableFilter<"Card"> | string | null
    data_finalizacao?: StringNullableFilter<"Card"> | string | null
    status_pedido?: StringFilter<"Card"> | string
    cep?: StringFilter<"Card"> | string
    street?: StringFilter<"Card"> | string
    neighborhood?: StringFilter<"Card"> | string
    city?: StringFilter<"Card"> | string
    state?: StringFilter<"Card"> | string
    number?: StringFilter<"Card"> | string
    complement?: StringNullableFilter<"Card"> | string | null
    createdAt?: DateTimeFilter<"Card"> | Date | string
    updatedAt?: DateTimeFilter<"Card"> | Date | string
    Cliente?: XOR<ClienteScalarRelationFilter, ClienteWhereInput>
    Prestador?: XOR<PrestadorNullableScalarRelationFilter, PrestadorWhereInput> | null
    Candidatura?: CandidaturaListRelationFilter
  }, "id_pedido">

  export type CardOrderByWithAggregationInput = {
    id_pedido?: SortOrder
    id_cliente?: SortOrder
    id_prestador?: SortOrderInput | SortOrder
    categoria?: SortOrder
    subcategoria?: SortOrder
    valor?: SortOrder
    horario_preferencial?: SortOrder
    valor_negociado?: SortOrderInput | SortOrder
    horario_negociado?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    codigo_confirmacao?: SortOrderInput | SortOrder
    data_finalizacao?: SortOrderInput | SortOrder
    status_pedido?: SortOrder
    cep?: SortOrder
    street?: SortOrder
    neighborhood?: SortOrder
    city?: SortOrder
    state?: SortOrder
    number?: SortOrder
    complement?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CardCountOrderByAggregateInput
    _avg?: CardAvgOrderByAggregateInput
    _max?: CardMaxOrderByAggregateInput
    _min?: CardMinOrderByAggregateInput
    _sum?: CardSumOrderByAggregateInput
  }

  export type CardScalarWhereWithAggregatesInput = {
    AND?: CardScalarWhereWithAggregatesInput | CardScalarWhereWithAggregatesInput[]
    OR?: CardScalarWhereWithAggregatesInput[]
    NOT?: CardScalarWhereWithAggregatesInput | CardScalarWhereWithAggregatesInput[]
    id_pedido?: StringWithAggregatesFilter<"Card"> | string
    id_cliente?: IntWithAggregatesFilter<"Card"> | number
    id_prestador?: IntNullableWithAggregatesFilter<"Card"> | number | null
    categoria?: StringWithAggregatesFilter<"Card"> | string
    subcategoria?: StringWithAggregatesFilter<"Card"> | string
    valor?: StringWithAggregatesFilter<"Card"> | string
    horario_preferencial?: StringWithAggregatesFilter<"Card"> | string
    valor_negociado?: StringNullableWithAggregatesFilter<"Card"> | string | null
    horario_negociado?: StringNullableWithAggregatesFilter<"Card"> | string | null
    status?: BoolNullableWithAggregatesFilter<"Card"> | boolean | null
    codigo_confirmacao?: StringNullableWithAggregatesFilter<"Card"> | string | null
    data_finalizacao?: StringNullableWithAggregatesFilter<"Card"> | string | null
    status_pedido?: StringWithAggregatesFilter<"Card"> | string
    cep?: StringWithAggregatesFilter<"Card"> | string
    street?: StringWithAggregatesFilter<"Card"> | string
    neighborhood?: StringWithAggregatesFilter<"Card"> | string
    city?: StringWithAggregatesFilter<"Card"> | string
    state?: StringWithAggregatesFilter<"Card"> | string
    number?: StringWithAggregatesFilter<"Card"> | string
    complement?: StringNullableWithAggregatesFilter<"Card"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Card"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Card"> | Date | string
  }

  export type ClienteCreateInput = {
    telefone?: string | null
    nome: string
    sobrenome: string
    cpf?: string | null
    data_nascimento?: string | null
    email: string
    password: string
    endereco_estado?: string | null
    endereco_cidade?: string | null
    endereco_bairro?: string | null
    endereco_rua?: string | null
    endereco_numero?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    Card?: CardCreateNestedManyWithoutClienteInput
  }

  export type ClienteUncheckedCreateInput = {
    id_cliente?: number
    telefone?: string | null
    nome: string
    sobrenome: string
    cpf?: string | null
    data_nascimento?: string | null
    email: string
    password: string
    endereco_estado?: string | null
    endereco_cidade?: string | null
    endereco_bairro?: string | null
    endereco_rua?: string | null
    endereco_numero?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    Card?: CardUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteUpdateInput = {
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    endereco_estado?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_cidade?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_bairro?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_rua?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_numero?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Card?: CardUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateInput = {
    id_cliente?: IntFieldUpdateOperationsInput | number
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    endereco_estado?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_cidade?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_bairro?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_rua?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_numero?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Card?: CardUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type ClienteCreateManyInput = {
    id_cliente?: number
    telefone?: string | null
    nome: string
    sobrenome: string
    cpf?: string | null
    data_nascimento?: string | null
    email: string
    password: string
    endereco_estado?: string | null
    endereco_cidade?: string | null
    endereco_bairro?: string | null
    endereco_rua?: string | null
    endereco_numero?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type ClienteUpdateManyMutationInput = {
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    endereco_estado?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_cidade?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_bairro?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_rua?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_numero?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClienteUncheckedUpdateManyInput = {
    id_cliente?: IntFieldUpdateOperationsInput | number
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    endereco_estado?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_cidade?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_bairro?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_rua?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_numero?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PrestadorCreateInput = {
    telefone?: string | null
    nome: string
    sobrenome: string
    cpf?: string | null
    data_nascimento?: string | null
    email: string
    password: string
    endereco_estado?: string | null
    endereco_cidade?: string | null
    endereco_bairro?: string | null
    endereco_rua?: string | null
    endereco_numero?: string | null
    especializacao?: string | null
    descricao?: string | null
    avaliacao?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    Candidatura?: CandidaturaCreateNestedManyWithoutPrestadorInput
    Card?: CardCreateNestedManyWithoutPrestadorInput
  }

  export type PrestadorUncheckedCreateInput = {
    id_prestador?: number
    telefone?: string | null
    nome: string
    sobrenome: string
    cpf?: string | null
    data_nascimento?: string | null
    email: string
    password: string
    endereco_estado?: string | null
    endereco_cidade?: string | null
    endereco_bairro?: string | null
    endereco_rua?: string | null
    endereco_numero?: string | null
    especializacao?: string | null
    descricao?: string | null
    avaliacao?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    Candidatura?: CandidaturaUncheckedCreateNestedManyWithoutPrestadorInput
    Card?: CardUncheckedCreateNestedManyWithoutPrestadorInput
  }

  export type PrestadorUpdateInput = {
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    endereco_estado?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_cidade?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_bairro?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_rua?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_numero?: NullableStringFieldUpdateOperationsInput | string | null
    especializacao?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    avaliacao?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Candidatura?: CandidaturaUpdateManyWithoutPrestadorNestedInput
    Card?: CardUpdateManyWithoutPrestadorNestedInput
  }

  export type PrestadorUncheckedUpdateInput = {
    id_prestador?: IntFieldUpdateOperationsInput | number
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    endereco_estado?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_cidade?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_bairro?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_rua?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_numero?: NullableStringFieldUpdateOperationsInput | string | null
    especializacao?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    avaliacao?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Candidatura?: CandidaturaUncheckedUpdateManyWithoutPrestadorNestedInput
    Card?: CardUncheckedUpdateManyWithoutPrestadorNestedInput
  }

  export type PrestadorCreateManyInput = {
    id_prestador?: number
    telefone?: string | null
    nome: string
    sobrenome: string
    cpf?: string | null
    data_nascimento?: string | null
    email: string
    password: string
    endereco_estado?: string | null
    endereco_cidade?: string | null
    endereco_bairro?: string | null
    endereco_rua?: string | null
    endereco_numero?: string | null
    especializacao?: string | null
    descricao?: string | null
    avaliacao?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type PrestadorUpdateManyMutationInput = {
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    endereco_estado?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_cidade?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_bairro?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_rua?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_numero?: NullableStringFieldUpdateOperationsInput | string | null
    especializacao?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    avaliacao?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PrestadorUncheckedUpdateManyInput = {
    id_prestador?: IntFieldUpdateOperationsInput | number
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    endereco_estado?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_cidade?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_bairro?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_rua?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_numero?: NullableStringFieldUpdateOperationsInput | string | null
    especializacao?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    avaliacao?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CandidaturaCreateInput = {
    valor_negociado?: string | null
    horario_negociado?: string | null
    status?: string | null
    data_candidatura?: Date | string
    Card: CardCreateNestedOneWithoutCandidaturaInput
    Prestador: PrestadorCreateNestedOneWithoutCandidaturaInput
  }

  export type CandidaturaUncheckedCreateInput = {
    id_candidatura?: number
    id_pedido: string
    prestador_id: number
    valor_negociado?: string | null
    horario_negociado?: string | null
    status?: string | null
    data_candidatura?: Date | string
  }

  export type CandidaturaUpdateInput = {
    valor_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    horario_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    data_candidatura?: DateTimeFieldUpdateOperationsInput | Date | string
    Card?: CardUpdateOneRequiredWithoutCandidaturaNestedInput
    Prestador?: PrestadorUpdateOneRequiredWithoutCandidaturaNestedInput
  }

  export type CandidaturaUncheckedUpdateInput = {
    id_candidatura?: IntFieldUpdateOperationsInput | number
    id_pedido?: StringFieldUpdateOperationsInput | string
    prestador_id?: IntFieldUpdateOperationsInput | number
    valor_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    horario_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    data_candidatura?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CandidaturaCreateManyInput = {
    id_candidatura?: number
    id_pedido: string
    prestador_id: number
    valor_negociado?: string | null
    horario_negociado?: string | null
    status?: string | null
    data_candidatura?: Date | string
  }

  export type CandidaturaUpdateManyMutationInput = {
    valor_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    horario_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    data_candidatura?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CandidaturaUncheckedUpdateManyInput = {
    id_candidatura?: IntFieldUpdateOperationsInput | number
    id_pedido?: StringFieldUpdateOperationsInput | string
    prestador_id?: IntFieldUpdateOperationsInput | number
    valor_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    horario_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    data_candidatura?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CardCreateInput = {
    id_pedido?: string
    categoria: string
    subcategoria: string
    valor: string
    horario_preferencial: string
    valor_negociado?: string | null
    horario_negociado?: string | null
    status?: boolean | null
    codigo_confirmacao?: string | null
    data_finalizacao?: string | null
    status_pedido: string
    cep: string
    street: string
    neighborhood: string
    city: string
    state: string
    number: string
    complement?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Cliente: ClienteCreateNestedOneWithoutCardInput
    Prestador?: PrestadorCreateNestedOneWithoutCardInput
    Candidatura?: CandidaturaCreateNestedManyWithoutCardInput
  }

  export type CardUncheckedCreateInput = {
    id_pedido?: string
    id_cliente: number
    id_prestador?: number | null
    categoria: string
    subcategoria: string
    valor: string
    horario_preferencial: string
    valor_negociado?: string | null
    horario_negociado?: string | null
    status?: boolean | null
    codigo_confirmacao?: string | null
    data_finalizacao?: string | null
    status_pedido: string
    cep: string
    street: string
    neighborhood: string
    city: string
    state: string
    number: string
    complement?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Candidatura?: CandidaturaUncheckedCreateNestedManyWithoutCardInput
  }

  export type CardUpdateInput = {
    id_pedido?: StringFieldUpdateOperationsInput | string
    categoria?: StringFieldUpdateOperationsInput | string
    subcategoria?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    horario_preferencial?: StringFieldUpdateOperationsInput | string
    valor_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    horario_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    codigo_confirmacao?: NullableStringFieldUpdateOperationsInput | string | null
    data_finalizacao?: NullableStringFieldUpdateOperationsInput | string | null
    status_pedido?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    neighborhood?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    number?: StringFieldUpdateOperationsInput | string
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Cliente?: ClienteUpdateOneRequiredWithoutCardNestedInput
    Prestador?: PrestadorUpdateOneWithoutCardNestedInput
    Candidatura?: CandidaturaUpdateManyWithoutCardNestedInput
  }

  export type CardUncheckedUpdateInput = {
    id_pedido?: StringFieldUpdateOperationsInput | string
    id_cliente?: IntFieldUpdateOperationsInput | number
    id_prestador?: NullableIntFieldUpdateOperationsInput | number | null
    categoria?: StringFieldUpdateOperationsInput | string
    subcategoria?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    horario_preferencial?: StringFieldUpdateOperationsInput | string
    valor_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    horario_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    codigo_confirmacao?: NullableStringFieldUpdateOperationsInput | string | null
    data_finalizacao?: NullableStringFieldUpdateOperationsInput | string | null
    status_pedido?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    neighborhood?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    number?: StringFieldUpdateOperationsInput | string
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Candidatura?: CandidaturaUncheckedUpdateManyWithoutCardNestedInput
  }

  export type CardCreateManyInput = {
    id_pedido?: string
    id_cliente: number
    id_prestador?: number | null
    categoria: string
    subcategoria: string
    valor: string
    horario_preferencial: string
    valor_negociado?: string | null
    horario_negociado?: string | null
    status?: boolean | null
    codigo_confirmacao?: string | null
    data_finalizacao?: string | null
    status_pedido: string
    cep: string
    street: string
    neighborhood: string
    city: string
    state: string
    number: string
    complement?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CardUpdateManyMutationInput = {
    id_pedido?: StringFieldUpdateOperationsInput | string
    categoria?: StringFieldUpdateOperationsInput | string
    subcategoria?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    horario_preferencial?: StringFieldUpdateOperationsInput | string
    valor_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    horario_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    codigo_confirmacao?: NullableStringFieldUpdateOperationsInput | string | null
    data_finalizacao?: NullableStringFieldUpdateOperationsInput | string | null
    status_pedido?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    neighborhood?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    number?: StringFieldUpdateOperationsInput | string
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CardUncheckedUpdateManyInput = {
    id_pedido?: StringFieldUpdateOperationsInput | string
    id_cliente?: IntFieldUpdateOperationsInput | number
    id_prestador?: NullableIntFieldUpdateOperationsInput | number | null
    categoria?: StringFieldUpdateOperationsInput | string
    subcategoria?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    horario_preferencial?: StringFieldUpdateOperationsInput | string
    valor_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    horario_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    codigo_confirmacao?: NullableStringFieldUpdateOperationsInput | string | null
    data_finalizacao?: NullableStringFieldUpdateOperationsInput | string | null
    status_pedido?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    neighborhood?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    number?: StringFieldUpdateOperationsInput | string
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type CardListRelationFilter = {
    every?: CardWhereInput
    some?: CardWhereInput
    none?: CardWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type CardOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ClienteOrderByRelevanceInput = {
    fields: ClienteOrderByRelevanceFieldEnum | ClienteOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ClienteCountOrderByAggregateInput = {
    id_cliente?: SortOrder
    telefone?: SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    cpf?: SortOrder
    data_nascimento?: SortOrder
    email?: SortOrder
    password?: SortOrder
    endereco_estado?: SortOrder
    endereco_cidade?: SortOrder
    endereco_bairro?: SortOrder
    endereco_rua?: SortOrder
    endereco_numero?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type ClienteAvgOrderByAggregateInput = {
    id_cliente?: SortOrder
  }

  export type ClienteMaxOrderByAggregateInput = {
    id_cliente?: SortOrder
    telefone?: SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    cpf?: SortOrder
    data_nascimento?: SortOrder
    email?: SortOrder
    password?: SortOrder
    endereco_estado?: SortOrder
    endereco_cidade?: SortOrder
    endereco_bairro?: SortOrder
    endereco_rua?: SortOrder
    endereco_numero?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type ClienteMinOrderByAggregateInput = {
    id_cliente?: SortOrder
    telefone?: SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    cpf?: SortOrder
    data_nascimento?: SortOrder
    email?: SortOrder
    password?: SortOrder
    endereco_estado?: SortOrder
    endereco_cidade?: SortOrder
    endereco_bairro?: SortOrder
    endereco_rua?: SortOrder
    endereco_numero?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type ClienteSumOrderByAggregateInput = {
    id_cliente?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type CandidaturaListRelationFilter = {
    every?: CandidaturaWhereInput
    some?: CandidaturaWhereInput
    none?: CandidaturaWhereInput
  }

  export type CandidaturaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PrestadorOrderByRelevanceInput = {
    fields: PrestadorOrderByRelevanceFieldEnum | PrestadorOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type PrestadorCountOrderByAggregateInput = {
    id_prestador?: SortOrder
    telefone?: SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    cpf?: SortOrder
    data_nascimento?: SortOrder
    email?: SortOrder
    password?: SortOrder
    endereco_estado?: SortOrder
    endereco_cidade?: SortOrder
    endereco_bairro?: SortOrder
    endereco_rua?: SortOrder
    endereco_numero?: SortOrder
    especializacao?: SortOrder
    descricao?: SortOrder
    avaliacao?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type PrestadorAvgOrderByAggregateInput = {
    id_prestador?: SortOrder
  }

  export type PrestadorMaxOrderByAggregateInput = {
    id_prestador?: SortOrder
    telefone?: SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    cpf?: SortOrder
    data_nascimento?: SortOrder
    email?: SortOrder
    password?: SortOrder
    endereco_estado?: SortOrder
    endereco_cidade?: SortOrder
    endereco_bairro?: SortOrder
    endereco_rua?: SortOrder
    endereco_numero?: SortOrder
    especializacao?: SortOrder
    descricao?: SortOrder
    avaliacao?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type PrestadorMinOrderByAggregateInput = {
    id_prestador?: SortOrder
    telefone?: SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    cpf?: SortOrder
    data_nascimento?: SortOrder
    email?: SortOrder
    password?: SortOrder
    endereco_estado?: SortOrder
    endereco_cidade?: SortOrder
    endereco_bairro?: SortOrder
    endereco_rua?: SortOrder
    endereco_numero?: SortOrder
    especializacao?: SortOrder
    descricao?: SortOrder
    avaliacao?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type PrestadorSumOrderByAggregateInput = {
    id_prestador?: SortOrder
  }

  export type CardScalarRelationFilter = {
    is?: CardWhereInput
    isNot?: CardWhereInput
  }

  export type PrestadorScalarRelationFilter = {
    is?: PrestadorWhereInput
    isNot?: PrestadorWhereInput
  }

  export type CandidaturaOrderByRelevanceInput = {
    fields: CandidaturaOrderByRelevanceFieldEnum | CandidaturaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CandidaturaId_pedidoPrestador_idCompoundUniqueInput = {
    id_pedido: string
    prestador_id: number
  }

  export type CandidaturaCountOrderByAggregateInput = {
    id_candidatura?: SortOrder
    id_pedido?: SortOrder
    prestador_id?: SortOrder
    valor_negociado?: SortOrder
    horario_negociado?: SortOrder
    status?: SortOrder
    data_candidatura?: SortOrder
  }

  export type CandidaturaAvgOrderByAggregateInput = {
    id_candidatura?: SortOrder
    prestador_id?: SortOrder
  }

  export type CandidaturaMaxOrderByAggregateInput = {
    id_candidatura?: SortOrder
    id_pedido?: SortOrder
    prestador_id?: SortOrder
    valor_negociado?: SortOrder
    horario_negociado?: SortOrder
    status?: SortOrder
    data_candidatura?: SortOrder
  }

  export type CandidaturaMinOrderByAggregateInput = {
    id_candidatura?: SortOrder
    id_pedido?: SortOrder
    prestador_id?: SortOrder
    valor_negociado?: SortOrder
    horario_negociado?: SortOrder
    status?: SortOrder
    data_candidatura?: SortOrder
  }

  export type CandidaturaSumOrderByAggregateInput = {
    id_candidatura?: SortOrder
    prestador_id?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type ClienteScalarRelationFilter = {
    is?: ClienteWhereInput
    isNot?: ClienteWhereInput
  }

  export type PrestadorNullableScalarRelationFilter = {
    is?: PrestadorWhereInput | null
    isNot?: PrestadorWhereInput | null
  }

  export type CardOrderByRelevanceInput = {
    fields: CardOrderByRelevanceFieldEnum | CardOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CardCountOrderByAggregateInput = {
    id_pedido?: SortOrder
    id_cliente?: SortOrder
    id_prestador?: SortOrder
    categoria?: SortOrder
    subcategoria?: SortOrder
    valor?: SortOrder
    horario_preferencial?: SortOrder
    valor_negociado?: SortOrder
    horario_negociado?: SortOrder
    status?: SortOrder
    codigo_confirmacao?: SortOrder
    data_finalizacao?: SortOrder
    status_pedido?: SortOrder
    cep?: SortOrder
    street?: SortOrder
    neighborhood?: SortOrder
    city?: SortOrder
    state?: SortOrder
    number?: SortOrder
    complement?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CardAvgOrderByAggregateInput = {
    id_cliente?: SortOrder
    id_prestador?: SortOrder
  }

  export type CardMaxOrderByAggregateInput = {
    id_pedido?: SortOrder
    id_cliente?: SortOrder
    id_prestador?: SortOrder
    categoria?: SortOrder
    subcategoria?: SortOrder
    valor?: SortOrder
    horario_preferencial?: SortOrder
    valor_negociado?: SortOrder
    horario_negociado?: SortOrder
    status?: SortOrder
    codigo_confirmacao?: SortOrder
    data_finalizacao?: SortOrder
    status_pedido?: SortOrder
    cep?: SortOrder
    street?: SortOrder
    neighborhood?: SortOrder
    city?: SortOrder
    state?: SortOrder
    number?: SortOrder
    complement?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CardMinOrderByAggregateInput = {
    id_pedido?: SortOrder
    id_cliente?: SortOrder
    id_prestador?: SortOrder
    categoria?: SortOrder
    subcategoria?: SortOrder
    valor?: SortOrder
    horario_preferencial?: SortOrder
    valor_negociado?: SortOrder
    horario_negociado?: SortOrder
    status?: SortOrder
    codigo_confirmacao?: SortOrder
    data_finalizacao?: SortOrder
    status_pedido?: SortOrder
    cep?: SortOrder
    street?: SortOrder
    neighborhood?: SortOrder
    city?: SortOrder
    state?: SortOrder
    number?: SortOrder
    complement?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CardSumOrderByAggregateInput = {
    id_cliente?: SortOrder
    id_prestador?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type CardCreateNestedManyWithoutClienteInput = {
    create?: XOR<CardCreateWithoutClienteInput, CardUncheckedCreateWithoutClienteInput> | CardCreateWithoutClienteInput[] | CardUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: CardCreateOrConnectWithoutClienteInput | CardCreateOrConnectWithoutClienteInput[]
    createMany?: CardCreateManyClienteInputEnvelope
    connect?: CardWhereUniqueInput | CardWhereUniqueInput[]
  }

  export type CardUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<CardCreateWithoutClienteInput, CardUncheckedCreateWithoutClienteInput> | CardCreateWithoutClienteInput[] | CardUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: CardCreateOrConnectWithoutClienteInput | CardCreateOrConnectWithoutClienteInput[]
    createMany?: CardCreateManyClienteInputEnvelope
    connect?: CardWhereUniqueInput | CardWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type CardUpdateManyWithoutClienteNestedInput = {
    create?: XOR<CardCreateWithoutClienteInput, CardUncheckedCreateWithoutClienteInput> | CardCreateWithoutClienteInput[] | CardUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: CardCreateOrConnectWithoutClienteInput | CardCreateOrConnectWithoutClienteInput[]
    upsert?: CardUpsertWithWhereUniqueWithoutClienteInput | CardUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: CardCreateManyClienteInputEnvelope
    set?: CardWhereUniqueInput | CardWhereUniqueInput[]
    disconnect?: CardWhereUniqueInput | CardWhereUniqueInput[]
    delete?: CardWhereUniqueInput | CardWhereUniqueInput[]
    connect?: CardWhereUniqueInput | CardWhereUniqueInput[]
    update?: CardUpdateWithWhereUniqueWithoutClienteInput | CardUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: CardUpdateManyWithWhereWithoutClienteInput | CardUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: CardScalarWhereInput | CardScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CardUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<CardCreateWithoutClienteInput, CardUncheckedCreateWithoutClienteInput> | CardCreateWithoutClienteInput[] | CardUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: CardCreateOrConnectWithoutClienteInput | CardCreateOrConnectWithoutClienteInput[]
    upsert?: CardUpsertWithWhereUniqueWithoutClienteInput | CardUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: CardCreateManyClienteInputEnvelope
    set?: CardWhereUniqueInput | CardWhereUniqueInput[]
    disconnect?: CardWhereUniqueInput | CardWhereUniqueInput[]
    delete?: CardWhereUniqueInput | CardWhereUniqueInput[]
    connect?: CardWhereUniqueInput | CardWhereUniqueInput[]
    update?: CardUpdateWithWhereUniqueWithoutClienteInput | CardUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: CardUpdateManyWithWhereWithoutClienteInput | CardUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: CardScalarWhereInput | CardScalarWhereInput[]
  }

  export type CandidaturaCreateNestedManyWithoutPrestadorInput = {
    create?: XOR<CandidaturaCreateWithoutPrestadorInput, CandidaturaUncheckedCreateWithoutPrestadorInput> | CandidaturaCreateWithoutPrestadorInput[] | CandidaturaUncheckedCreateWithoutPrestadorInput[]
    connectOrCreate?: CandidaturaCreateOrConnectWithoutPrestadorInput | CandidaturaCreateOrConnectWithoutPrestadorInput[]
    createMany?: CandidaturaCreateManyPrestadorInputEnvelope
    connect?: CandidaturaWhereUniqueInput | CandidaturaWhereUniqueInput[]
  }

  export type CardCreateNestedManyWithoutPrestadorInput = {
    create?: XOR<CardCreateWithoutPrestadorInput, CardUncheckedCreateWithoutPrestadorInput> | CardCreateWithoutPrestadorInput[] | CardUncheckedCreateWithoutPrestadorInput[]
    connectOrCreate?: CardCreateOrConnectWithoutPrestadorInput | CardCreateOrConnectWithoutPrestadorInput[]
    createMany?: CardCreateManyPrestadorInputEnvelope
    connect?: CardWhereUniqueInput | CardWhereUniqueInput[]
  }

  export type CandidaturaUncheckedCreateNestedManyWithoutPrestadorInput = {
    create?: XOR<CandidaturaCreateWithoutPrestadorInput, CandidaturaUncheckedCreateWithoutPrestadorInput> | CandidaturaCreateWithoutPrestadorInput[] | CandidaturaUncheckedCreateWithoutPrestadorInput[]
    connectOrCreate?: CandidaturaCreateOrConnectWithoutPrestadorInput | CandidaturaCreateOrConnectWithoutPrestadorInput[]
    createMany?: CandidaturaCreateManyPrestadorInputEnvelope
    connect?: CandidaturaWhereUniqueInput | CandidaturaWhereUniqueInput[]
  }

  export type CardUncheckedCreateNestedManyWithoutPrestadorInput = {
    create?: XOR<CardCreateWithoutPrestadorInput, CardUncheckedCreateWithoutPrestadorInput> | CardCreateWithoutPrestadorInput[] | CardUncheckedCreateWithoutPrestadorInput[]
    connectOrCreate?: CardCreateOrConnectWithoutPrestadorInput | CardCreateOrConnectWithoutPrestadorInput[]
    createMany?: CardCreateManyPrestadorInputEnvelope
    connect?: CardWhereUniqueInput | CardWhereUniqueInput[]
  }

  export type CandidaturaUpdateManyWithoutPrestadorNestedInput = {
    create?: XOR<CandidaturaCreateWithoutPrestadorInput, CandidaturaUncheckedCreateWithoutPrestadorInput> | CandidaturaCreateWithoutPrestadorInput[] | CandidaturaUncheckedCreateWithoutPrestadorInput[]
    connectOrCreate?: CandidaturaCreateOrConnectWithoutPrestadorInput | CandidaturaCreateOrConnectWithoutPrestadorInput[]
    upsert?: CandidaturaUpsertWithWhereUniqueWithoutPrestadorInput | CandidaturaUpsertWithWhereUniqueWithoutPrestadorInput[]
    createMany?: CandidaturaCreateManyPrestadorInputEnvelope
    set?: CandidaturaWhereUniqueInput | CandidaturaWhereUniqueInput[]
    disconnect?: CandidaturaWhereUniqueInput | CandidaturaWhereUniqueInput[]
    delete?: CandidaturaWhereUniqueInput | CandidaturaWhereUniqueInput[]
    connect?: CandidaturaWhereUniqueInput | CandidaturaWhereUniqueInput[]
    update?: CandidaturaUpdateWithWhereUniqueWithoutPrestadorInput | CandidaturaUpdateWithWhereUniqueWithoutPrestadorInput[]
    updateMany?: CandidaturaUpdateManyWithWhereWithoutPrestadorInput | CandidaturaUpdateManyWithWhereWithoutPrestadorInput[]
    deleteMany?: CandidaturaScalarWhereInput | CandidaturaScalarWhereInput[]
  }

  export type CardUpdateManyWithoutPrestadorNestedInput = {
    create?: XOR<CardCreateWithoutPrestadorInput, CardUncheckedCreateWithoutPrestadorInput> | CardCreateWithoutPrestadorInput[] | CardUncheckedCreateWithoutPrestadorInput[]
    connectOrCreate?: CardCreateOrConnectWithoutPrestadorInput | CardCreateOrConnectWithoutPrestadorInput[]
    upsert?: CardUpsertWithWhereUniqueWithoutPrestadorInput | CardUpsertWithWhereUniqueWithoutPrestadorInput[]
    createMany?: CardCreateManyPrestadorInputEnvelope
    set?: CardWhereUniqueInput | CardWhereUniqueInput[]
    disconnect?: CardWhereUniqueInput | CardWhereUniqueInput[]
    delete?: CardWhereUniqueInput | CardWhereUniqueInput[]
    connect?: CardWhereUniqueInput | CardWhereUniqueInput[]
    update?: CardUpdateWithWhereUniqueWithoutPrestadorInput | CardUpdateWithWhereUniqueWithoutPrestadorInput[]
    updateMany?: CardUpdateManyWithWhereWithoutPrestadorInput | CardUpdateManyWithWhereWithoutPrestadorInput[]
    deleteMany?: CardScalarWhereInput | CardScalarWhereInput[]
  }

  export type CandidaturaUncheckedUpdateManyWithoutPrestadorNestedInput = {
    create?: XOR<CandidaturaCreateWithoutPrestadorInput, CandidaturaUncheckedCreateWithoutPrestadorInput> | CandidaturaCreateWithoutPrestadorInput[] | CandidaturaUncheckedCreateWithoutPrestadorInput[]
    connectOrCreate?: CandidaturaCreateOrConnectWithoutPrestadorInput | CandidaturaCreateOrConnectWithoutPrestadorInput[]
    upsert?: CandidaturaUpsertWithWhereUniqueWithoutPrestadorInput | CandidaturaUpsertWithWhereUniqueWithoutPrestadorInput[]
    createMany?: CandidaturaCreateManyPrestadorInputEnvelope
    set?: CandidaturaWhereUniqueInput | CandidaturaWhereUniqueInput[]
    disconnect?: CandidaturaWhereUniqueInput | CandidaturaWhereUniqueInput[]
    delete?: CandidaturaWhereUniqueInput | CandidaturaWhereUniqueInput[]
    connect?: CandidaturaWhereUniqueInput | CandidaturaWhereUniqueInput[]
    update?: CandidaturaUpdateWithWhereUniqueWithoutPrestadorInput | CandidaturaUpdateWithWhereUniqueWithoutPrestadorInput[]
    updateMany?: CandidaturaUpdateManyWithWhereWithoutPrestadorInput | CandidaturaUpdateManyWithWhereWithoutPrestadorInput[]
    deleteMany?: CandidaturaScalarWhereInput | CandidaturaScalarWhereInput[]
  }

  export type CardUncheckedUpdateManyWithoutPrestadorNestedInput = {
    create?: XOR<CardCreateWithoutPrestadorInput, CardUncheckedCreateWithoutPrestadorInput> | CardCreateWithoutPrestadorInput[] | CardUncheckedCreateWithoutPrestadorInput[]
    connectOrCreate?: CardCreateOrConnectWithoutPrestadorInput | CardCreateOrConnectWithoutPrestadorInput[]
    upsert?: CardUpsertWithWhereUniqueWithoutPrestadorInput | CardUpsertWithWhereUniqueWithoutPrestadorInput[]
    createMany?: CardCreateManyPrestadorInputEnvelope
    set?: CardWhereUniqueInput | CardWhereUniqueInput[]
    disconnect?: CardWhereUniqueInput | CardWhereUniqueInput[]
    delete?: CardWhereUniqueInput | CardWhereUniqueInput[]
    connect?: CardWhereUniqueInput | CardWhereUniqueInput[]
    update?: CardUpdateWithWhereUniqueWithoutPrestadorInput | CardUpdateWithWhereUniqueWithoutPrestadorInput[]
    updateMany?: CardUpdateManyWithWhereWithoutPrestadorInput | CardUpdateManyWithWhereWithoutPrestadorInput[]
    deleteMany?: CardScalarWhereInput | CardScalarWhereInput[]
  }

  export type CardCreateNestedOneWithoutCandidaturaInput = {
    create?: XOR<CardCreateWithoutCandidaturaInput, CardUncheckedCreateWithoutCandidaturaInput>
    connectOrCreate?: CardCreateOrConnectWithoutCandidaturaInput
    connect?: CardWhereUniqueInput
  }

  export type PrestadorCreateNestedOneWithoutCandidaturaInput = {
    create?: XOR<PrestadorCreateWithoutCandidaturaInput, PrestadorUncheckedCreateWithoutCandidaturaInput>
    connectOrCreate?: PrestadorCreateOrConnectWithoutCandidaturaInput
    connect?: PrestadorWhereUniqueInput
  }

  export type CardUpdateOneRequiredWithoutCandidaturaNestedInput = {
    create?: XOR<CardCreateWithoutCandidaturaInput, CardUncheckedCreateWithoutCandidaturaInput>
    connectOrCreate?: CardCreateOrConnectWithoutCandidaturaInput
    upsert?: CardUpsertWithoutCandidaturaInput
    connect?: CardWhereUniqueInput
    update?: XOR<XOR<CardUpdateToOneWithWhereWithoutCandidaturaInput, CardUpdateWithoutCandidaturaInput>, CardUncheckedUpdateWithoutCandidaturaInput>
  }

  export type PrestadorUpdateOneRequiredWithoutCandidaturaNestedInput = {
    create?: XOR<PrestadorCreateWithoutCandidaturaInput, PrestadorUncheckedCreateWithoutCandidaturaInput>
    connectOrCreate?: PrestadorCreateOrConnectWithoutCandidaturaInput
    upsert?: PrestadorUpsertWithoutCandidaturaInput
    connect?: PrestadorWhereUniqueInput
    update?: XOR<XOR<PrestadorUpdateToOneWithWhereWithoutCandidaturaInput, PrestadorUpdateWithoutCandidaturaInput>, PrestadorUncheckedUpdateWithoutCandidaturaInput>
  }

  export type ClienteCreateNestedOneWithoutCardInput = {
    create?: XOR<ClienteCreateWithoutCardInput, ClienteUncheckedCreateWithoutCardInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutCardInput
    connect?: ClienteWhereUniqueInput
  }

  export type PrestadorCreateNestedOneWithoutCardInput = {
    create?: XOR<PrestadorCreateWithoutCardInput, PrestadorUncheckedCreateWithoutCardInput>
    connectOrCreate?: PrestadorCreateOrConnectWithoutCardInput
    connect?: PrestadorWhereUniqueInput
  }

  export type CandidaturaCreateNestedManyWithoutCardInput = {
    create?: XOR<CandidaturaCreateWithoutCardInput, CandidaturaUncheckedCreateWithoutCardInput> | CandidaturaCreateWithoutCardInput[] | CandidaturaUncheckedCreateWithoutCardInput[]
    connectOrCreate?: CandidaturaCreateOrConnectWithoutCardInput | CandidaturaCreateOrConnectWithoutCardInput[]
    createMany?: CandidaturaCreateManyCardInputEnvelope
    connect?: CandidaturaWhereUniqueInput | CandidaturaWhereUniqueInput[]
  }

  export type CandidaturaUncheckedCreateNestedManyWithoutCardInput = {
    create?: XOR<CandidaturaCreateWithoutCardInput, CandidaturaUncheckedCreateWithoutCardInput> | CandidaturaCreateWithoutCardInput[] | CandidaturaUncheckedCreateWithoutCardInput[]
    connectOrCreate?: CandidaturaCreateOrConnectWithoutCardInput | CandidaturaCreateOrConnectWithoutCardInput[]
    createMany?: CandidaturaCreateManyCardInputEnvelope
    connect?: CandidaturaWhereUniqueInput | CandidaturaWhereUniqueInput[]
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type ClienteUpdateOneRequiredWithoutCardNestedInput = {
    create?: XOR<ClienteCreateWithoutCardInput, ClienteUncheckedCreateWithoutCardInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutCardInput
    upsert?: ClienteUpsertWithoutCardInput
    connect?: ClienteWhereUniqueInput
    update?: XOR<XOR<ClienteUpdateToOneWithWhereWithoutCardInput, ClienteUpdateWithoutCardInput>, ClienteUncheckedUpdateWithoutCardInput>
  }

  export type PrestadorUpdateOneWithoutCardNestedInput = {
    create?: XOR<PrestadorCreateWithoutCardInput, PrestadorUncheckedCreateWithoutCardInput>
    connectOrCreate?: PrestadorCreateOrConnectWithoutCardInput
    upsert?: PrestadorUpsertWithoutCardInput
    disconnect?: PrestadorWhereInput | boolean
    delete?: PrestadorWhereInput | boolean
    connect?: PrestadorWhereUniqueInput
    update?: XOR<XOR<PrestadorUpdateToOneWithWhereWithoutCardInput, PrestadorUpdateWithoutCardInput>, PrestadorUncheckedUpdateWithoutCardInput>
  }

  export type CandidaturaUpdateManyWithoutCardNestedInput = {
    create?: XOR<CandidaturaCreateWithoutCardInput, CandidaturaUncheckedCreateWithoutCardInput> | CandidaturaCreateWithoutCardInput[] | CandidaturaUncheckedCreateWithoutCardInput[]
    connectOrCreate?: CandidaturaCreateOrConnectWithoutCardInput | CandidaturaCreateOrConnectWithoutCardInput[]
    upsert?: CandidaturaUpsertWithWhereUniqueWithoutCardInput | CandidaturaUpsertWithWhereUniqueWithoutCardInput[]
    createMany?: CandidaturaCreateManyCardInputEnvelope
    set?: CandidaturaWhereUniqueInput | CandidaturaWhereUniqueInput[]
    disconnect?: CandidaturaWhereUniqueInput | CandidaturaWhereUniqueInput[]
    delete?: CandidaturaWhereUniqueInput | CandidaturaWhereUniqueInput[]
    connect?: CandidaturaWhereUniqueInput | CandidaturaWhereUniqueInput[]
    update?: CandidaturaUpdateWithWhereUniqueWithoutCardInput | CandidaturaUpdateWithWhereUniqueWithoutCardInput[]
    updateMany?: CandidaturaUpdateManyWithWhereWithoutCardInput | CandidaturaUpdateManyWithWhereWithoutCardInput[]
    deleteMany?: CandidaturaScalarWhereInput | CandidaturaScalarWhereInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CandidaturaUncheckedUpdateManyWithoutCardNestedInput = {
    create?: XOR<CandidaturaCreateWithoutCardInput, CandidaturaUncheckedCreateWithoutCardInput> | CandidaturaCreateWithoutCardInput[] | CandidaturaUncheckedCreateWithoutCardInput[]
    connectOrCreate?: CandidaturaCreateOrConnectWithoutCardInput | CandidaturaCreateOrConnectWithoutCardInput[]
    upsert?: CandidaturaUpsertWithWhereUniqueWithoutCardInput | CandidaturaUpsertWithWhereUniqueWithoutCardInput[]
    createMany?: CandidaturaCreateManyCardInputEnvelope
    set?: CandidaturaWhereUniqueInput | CandidaturaWhereUniqueInput[]
    disconnect?: CandidaturaWhereUniqueInput | CandidaturaWhereUniqueInput[]
    delete?: CandidaturaWhereUniqueInput | CandidaturaWhereUniqueInput[]
    connect?: CandidaturaWhereUniqueInput | CandidaturaWhereUniqueInput[]
    update?: CandidaturaUpdateWithWhereUniqueWithoutCardInput | CandidaturaUpdateWithWhereUniqueWithoutCardInput[]
    updateMany?: CandidaturaUpdateManyWithWhereWithoutCardInput | CandidaturaUpdateManyWithWhereWithoutCardInput[]
    deleteMany?: CandidaturaScalarWhereInput | CandidaturaScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type CardCreateWithoutClienteInput = {
    id_pedido?: string
    categoria: string
    subcategoria: string
    valor: string
    horario_preferencial: string
    valor_negociado?: string | null
    horario_negociado?: string | null
    status?: boolean | null
    codigo_confirmacao?: string | null
    data_finalizacao?: string | null
    status_pedido: string
    cep: string
    street: string
    neighborhood: string
    city: string
    state: string
    number: string
    complement?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Prestador?: PrestadorCreateNestedOneWithoutCardInput
    Candidatura?: CandidaturaCreateNestedManyWithoutCardInput
  }

  export type CardUncheckedCreateWithoutClienteInput = {
    id_pedido?: string
    id_prestador?: number | null
    categoria: string
    subcategoria: string
    valor: string
    horario_preferencial: string
    valor_negociado?: string | null
    horario_negociado?: string | null
    status?: boolean | null
    codigo_confirmacao?: string | null
    data_finalizacao?: string | null
    status_pedido: string
    cep: string
    street: string
    neighborhood: string
    city: string
    state: string
    number: string
    complement?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Candidatura?: CandidaturaUncheckedCreateNestedManyWithoutCardInput
  }

  export type CardCreateOrConnectWithoutClienteInput = {
    where: CardWhereUniqueInput
    create: XOR<CardCreateWithoutClienteInput, CardUncheckedCreateWithoutClienteInput>
  }

  export type CardCreateManyClienteInputEnvelope = {
    data: CardCreateManyClienteInput | CardCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type CardUpsertWithWhereUniqueWithoutClienteInput = {
    where: CardWhereUniqueInput
    update: XOR<CardUpdateWithoutClienteInput, CardUncheckedUpdateWithoutClienteInput>
    create: XOR<CardCreateWithoutClienteInput, CardUncheckedCreateWithoutClienteInput>
  }

  export type CardUpdateWithWhereUniqueWithoutClienteInput = {
    where: CardWhereUniqueInput
    data: XOR<CardUpdateWithoutClienteInput, CardUncheckedUpdateWithoutClienteInput>
  }

  export type CardUpdateManyWithWhereWithoutClienteInput = {
    where: CardScalarWhereInput
    data: XOR<CardUpdateManyMutationInput, CardUncheckedUpdateManyWithoutClienteInput>
  }

  export type CardScalarWhereInput = {
    AND?: CardScalarWhereInput | CardScalarWhereInput[]
    OR?: CardScalarWhereInput[]
    NOT?: CardScalarWhereInput | CardScalarWhereInput[]
    id_pedido?: StringFilter<"Card"> | string
    id_cliente?: IntFilter<"Card"> | number
    id_prestador?: IntNullableFilter<"Card"> | number | null
    categoria?: StringFilter<"Card"> | string
    subcategoria?: StringFilter<"Card"> | string
    valor?: StringFilter<"Card"> | string
    horario_preferencial?: StringFilter<"Card"> | string
    valor_negociado?: StringNullableFilter<"Card"> | string | null
    horario_negociado?: StringNullableFilter<"Card"> | string | null
    status?: BoolNullableFilter<"Card"> | boolean | null
    codigo_confirmacao?: StringNullableFilter<"Card"> | string | null
    data_finalizacao?: StringNullableFilter<"Card"> | string | null
    status_pedido?: StringFilter<"Card"> | string
    cep?: StringFilter<"Card"> | string
    street?: StringFilter<"Card"> | string
    neighborhood?: StringFilter<"Card"> | string
    city?: StringFilter<"Card"> | string
    state?: StringFilter<"Card"> | string
    number?: StringFilter<"Card"> | string
    complement?: StringNullableFilter<"Card"> | string | null
    createdAt?: DateTimeFilter<"Card"> | Date | string
    updatedAt?: DateTimeFilter<"Card"> | Date | string
  }

  export type CandidaturaCreateWithoutPrestadorInput = {
    valor_negociado?: string | null
    horario_negociado?: string | null
    status?: string | null
    data_candidatura?: Date | string
    Card: CardCreateNestedOneWithoutCandidaturaInput
  }

  export type CandidaturaUncheckedCreateWithoutPrestadorInput = {
    id_candidatura?: number
    id_pedido: string
    valor_negociado?: string | null
    horario_negociado?: string | null
    status?: string | null
    data_candidatura?: Date | string
  }

  export type CandidaturaCreateOrConnectWithoutPrestadorInput = {
    where: CandidaturaWhereUniqueInput
    create: XOR<CandidaturaCreateWithoutPrestadorInput, CandidaturaUncheckedCreateWithoutPrestadorInput>
  }

  export type CandidaturaCreateManyPrestadorInputEnvelope = {
    data: CandidaturaCreateManyPrestadorInput | CandidaturaCreateManyPrestadorInput[]
    skipDuplicates?: boolean
  }

  export type CardCreateWithoutPrestadorInput = {
    id_pedido?: string
    categoria: string
    subcategoria: string
    valor: string
    horario_preferencial: string
    valor_negociado?: string | null
    horario_negociado?: string | null
    status?: boolean | null
    codigo_confirmacao?: string | null
    data_finalizacao?: string | null
    status_pedido: string
    cep: string
    street: string
    neighborhood: string
    city: string
    state: string
    number: string
    complement?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Cliente: ClienteCreateNestedOneWithoutCardInput
    Candidatura?: CandidaturaCreateNestedManyWithoutCardInput
  }

  export type CardUncheckedCreateWithoutPrestadorInput = {
    id_pedido?: string
    id_cliente: number
    categoria: string
    subcategoria: string
    valor: string
    horario_preferencial: string
    valor_negociado?: string | null
    horario_negociado?: string | null
    status?: boolean | null
    codigo_confirmacao?: string | null
    data_finalizacao?: string | null
    status_pedido: string
    cep: string
    street: string
    neighborhood: string
    city: string
    state: string
    number: string
    complement?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Candidatura?: CandidaturaUncheckedCreateNestedManyWithoutCardInput
  }

  export type CardCreateOrConnectWithoutPrestadorInput = {
    where: CardWhereUniqueInput
    create: XOR<CardCreateWithoutPrestadorInput, CardUncheckedCreateWithoutPrestadorInput>
  }

  export type CardCreateManyPrestadorInputEnvelope = {
    data: CardCreateManyPrestadorInput | CardCreateManyPrestadorInput[]
    skipDuplicates?: boolean
  }

  export type CandidaturaUpsertWithWhereUniqueWithoutPrestadorInput = {
    where: CandidaturaWhereUniqueInput
    update: XOR<CandidaturaUpdateWithoutPrestadorInput, CandidaturaUncheckedUpdateWithoutPrestadorInput>
    create: XOR<CandidaturaCreateWithoutPrestadorInput, CandidaturaUncheckedCreateWithoutPrestadorInput>
  }

  export type CandidaturaUpdateWithWhereUniqueWithoutPrestadorInput = {
    where: CandidaturaWhereUniqueInput
    data: XOR<CandidaturaUpdateWithoutPrestadorInput, CandidaturaUncheckedUpdateWithoutPrestadorInput>
  }

  export type CandidaturaUpdateManyWithWhereWithoutPrestadorInput = {
    where: CandidaturaScalarWhereInput
    data: XOR<CandidaturaUpdateManyMutationInput, CandidaturaUncheckedUpdateManyWithoutPrestadorInput>
  }

  export type CandidaturaScalarWhereInput = {
    AND?: CandidaturaScalarWhereInput | CandidaturaScalarWhereInput[]
    OR?: CandidaturaScalarWhereInput[]
    NOT?: CandidaturaScalarWhereInput | CandidaturaScalarWhereInput[]
    id_candidatura?: IntFilter<"Candidatura"> | number
    id_pedido?: StringFilter<"Candidatura"> | string
    prestador_id?: IntFilter<"Candidatura"> | number
    valor_negociado?: StringNullableFilter<"Candidatura"> | string | null
    horario_negociado?: StringNullableFilter<"Candidatura"> | string | null
    status?: StringNullableFilter<"Candidatura"> | string | null
    data_candidatura?: DateTimeFilter<"Candidatura"> | Date | string
  }

  export type CardUpsertWithWhereUniqueWithoutPrestadorInput = {
    where: CardWhereUniqueInput
    update: XOR<CardUpdateWithoutPrestadorInput, CardUncheckedUpdateWithoutPrestadorInput>
    create: XOR<CardCreateWithoutPrestadorInput, CardUncheckedCreateWithoutPrestadorInput>
  }

  export type CardUpdateWithWhereUniqueWithoutPrestadorInput = {
    where: CardWhereUniqueInput
    data: XOR<CardUpdateWithoutPrestadorInput, CardUncheckedUpdateWithoutPrestadorInput>
  }

  export type CardUpdateManyWithWhereWithoutPrestadorInput = {
    where: CardScalarWhereInput
    data: XOR<CardUpdateManyMutationInput, CardUncheckedUpdateManyWithoutPrestadorInput>
  }

  export type CardCreateWithoutCandidaturaInput = {
    id_pedido?: string
    categoria: string
    subcategoria: string
    valor: string
    horario_preferencial: string
    valor_negociado?: string | null
    horario_negociado?: string | null
    status?: boolean | null
    codigo_confirmacao?: string | null
    data_finalizacao?: string | null
    status_pedido: string
    cep: string
    street: string
    neighborhood: string
    city: string
    state: string
    number: string
    complement?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Cliente: ClienteCreateNestedOneWithoutCardInput
    Prestador?: PrestadorCreateNestedOneWithoutCardInput
  }

  export type CardUncheckedCreateWithoutCandidaturaInput = {
    id_pedido?: string
    id_cliente: number
    id_prestador?: number | null
    categoria: string
    subcategoria: string
    valor: string
    horario_preferencial: string
    valor_negociado?: string | null
    horario_negociado?: string | null
    status?: boolean | null
    codigo_confirmacao?: string | null
    data_finalizacao?: string | null
    status_pedido: string
    cep: string
    street: string
    neighborhood: string
    city: string
    state: string
    number: string
    complement?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CardCreateOrConnectWithoutCandidaturaInput = {
    where: CardWhereUniqueInput
    create: XOR<CardCreateWithoutCandidaturaInput, CardUncheckedCreateWithoutCandidaturaInput>
  }

  export type PrestadorCreateWithoutCandidaturaInput = {
    telefone?: string | null
    nome: string
    sobrenome: string
    cpf?: string | null
    data_nascimento?: string | null
    email: string
    password: string
    endereco_estado?: string | null
    endereco_cidade?: string | null
    endereco_bairro?: string | null
    endereco_rua?: string | null
    endereco_numero?: string | null
    especializacao?: string | null
    descricao?: string | null
    avaliacao?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    Card?: CardCreateNestedManyWithoutPrestadorInput
  }

  export type PrestadorUncheckedCreateWithoutCandidaturaInput = {
    id_prestador?: number
    telefone?: string | null
    nome: string
    sobrenome: string
    cpf?: string | null
    data_nascimento?: string | null
    email: string
    password: string
    endereco_estado?: string | null
    endereco_cidade?: string | null
    endereco_bairro?: string | null
    endereco_rua?: string | null
    endereco_numero?: string | null
    especializacao?: string | null
    descricao?: string | null
    avaliacao?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    Card?: CardUncheckedCreateNestedManyWithoutPrestadorInput
  }

  export type PrestadorCreateOrConnectWithoutCandidaturaInput = {
    where: PrestadorWhereUniqueInput
    create: XOR<PrestadorCreateWithoutCandidaturaInput, PrestadorUncheckedCreateWithoutCandidaturaInput>
  }

  export type CardUpsertWithoutCandidaturaInput = {
    update: XOR<CardUpdateWithoutCandidaturaInput, CardUncheckedUpdateWithoutCandidaturaInput>
    create: XOR<CardCreateWithoutCandidaturaInput, CardUncheckedCreateWithoutCandidaturaInput>
    where?: CardWhereInput
  }

  export type CardUpdateToOneWithWhereWithoutCandidaturaInput = {
    where?: CardWhereInput
    data: XOR<CardUpdateWithoutCandidaturaInput, CardUncheckedUpdateWithoutCandidaturaInput>
  }

  export type CardUpdateWithoutCandidaturaInput = {
    id_pedido?: StringFieldUpdateOperationsInput | string
    categoria?: StringFieldUpdateOperationsInput | string
    subcategoria?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    horario_preferencial?: StringFieldUpdateOperationsInput | string
    valor_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    horario_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    codigo_confirmacao?: NullableStringFieldUpdateOperationsInput | string | null
    data_finalizacao?: NullableStringFieldUpdateOperationsInput | string | null
    status_pedido?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    neighborhood?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    number?: StringFieldUpdateOperationsInput | string
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Cliente?: ClienteUpdateOneRequiredWithoutCardNestedInput
    Prestador?: PrestadorUpdateOneWithoutCardNestedInput
  }

  export type CardUncheckedUpdateWithoutCandidaturaInput = {
    id_pedido?: StringFieldUpdateOperationsInput | string
    id_cliente?: IntFieldUpdateOperationsInput | number
    id_prestador?: NullableIntFieldUpdateOperationsInput | number | null
    categoria?: StringFieldUpdateOperationsInput | string
    subcategoria?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    horario_preferencial?: StringFieldUpdateOperationsInput | string
    valor_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    horario_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    codigo_confirmacao?: NullableStringFieldUpdateOperationsInput | string | null
    data_finalizacao?: NullableStringFieldUpdateOperationsInput | string | null
    status_pedido?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    neighborhood?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    number?: StringFieldUpdateOperationsInput | string
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PrestadorUpsertWithoutCandidaturaInput = {
    update: XOR<PrestadorUpdateWithoutCandidaturaInput, PrestadorUncheckedUpdateWithoutCandidaturaInput>
    create: XOR<PrestadorCreateWithoutCandidaturaInput, PrestadorUncheckedCreateWithoutCandidaturaInput>
    where?: PrestadorWhereInput
  }

  export type PrestadorUpdateToOneWithWhereWithoutCandidaturaInput = {
    where?: PrestadorWhereInput
    data: XOR<PrestadorUpdateWithoutCandidaturaInput, PrestadorUncheckedUpdateWithoutCandidaturaInput>
  }

  export type PrestadorUpdateWithoutCandidaturaInput = {
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    endereco_estado?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_cidade?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_bairro?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_rua?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_numero?: NullableStringFieldUpdateOperationsInput | string | null
    especializacao?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    avaliacao?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Card?: CardUpdateManyWithoutPrestadorNestedInput
  }

  export type PrestadorUncheckedUpdateWithoutCandidaturaInput = {
    id_prestador?: IntFieldUpdateOperationsInput | number
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    endereco_estado?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_cidade?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_bairro?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_rua?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_numero?: NullableStringFieldUpdateOperationsInput | string | null
    especializacao?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    avaliacao?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Card?: CardUncheckedUpdateManyWithoutPrestadorNestedInput
  }

  export type ClienteCreateWithoutCardInput = {
    telefone?: string | null
    nome: string
    sobrenome: string
    cpf?: string | null
    data_nascimento?: string | null
    email: string
    password: string
    endereco_estado?: string | null
    endereco_cidade?: string | null
    endereco_bairro?: string | null
    endereco_rua?: string | null
    endereco_numero?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type ClienteUncheckedCreateWithoutCardInput = {
    id_cliente?: number
    telefone?: string | null
    nome: string
    sobrenome: string
    cpf?: string | null
    data_nascimento?: string | null
    email: string
    password: string
    endereco_estado?: string | null
    endereco_cidade?: string | null
    endereco_bairro?: string | null
    endereco_rua?: string | null
    endereco_numero?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type ClienteCreateOrConnectWithoutCardInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutCardInput, ClienteUncheckedCreateWithoutCardInput>
  }

  export type PrestadorCreateWithoutCardInput = {
    telefone?: string | null
    nome: string
    sobrenome: string
    cpf?: string | null
    data_nascimento?: string | null
    email: string
    password: string
    endereco_estado?: string | null
    endereco_cidade?: string | null
    endereco_bairro?: string | null
    endereco_rua?: string | null
    endereco_numero?: string | null
    especializacao?: string | null
    descricao?: string | null
    avaliacao?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    Candidatura?: CandidaturaCreateNestedManyWithoutPrestadorInput
  }

  export type PrestadorUncheckedCreateWithoutCardInput = {
    id_prestador?: number
    telefone?: string | null
    nome: string
    sobrenome: string
    cpf?: string | null
    data_nascimento?: string | null
    email: string
    password: string
    endereco_estado?: string | null
    endereco_cidade?: string | null
    endereco_bairro?: string | null
    endereco_rua?: string | null
    endereco_numero?: string | null
    especializacao?: string | null
    descricao?: string | null
    avaliacao?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    Candidatura?: CandidaturaUncheckedCreateNestedManyWithoutPrestadorInput
  }

  export type PrestadorCreateOrConnectWithoutCardInput = {
    where: PrestadorWhereUniqueInput
    create: XOR<PrestadorCreateWithoutCardInput, PrestadorUncheckedCreateWithoutCardInput>
  }

  export type CandidaturaCreateWithoutCardInput = {
    valor_negociado?: string | null
    horario_negociado?: string | null
    status?: string | null
    data_candidatura?: Date | string
    Prestador: PrestadorCreateNestedOneWithoutCandidaturaInput
  }

  export type CandidaturaUncheckedCreateWithoutCardInput = {
    id_candidatura?: number
    prestador_id: number
    valor_negociado?: string | null
    horario_negociado?: string | null
    status?: string | null
    data_candidatura?: Date | string
  }

  export type CandidaturaCreateOrConnectWithoutCardInput = {
    where: CandidaturaWhereUniqueInput
    create: XOR<CandidaturaCreateWithoutCardInput, CandidaturaUncheckedCreateWithoutCardInput>
  }

  export type CandidaturaCreateManyCardInputEnvelope = {
    data: CandidaturaCreateManyCardInput | CandidaturaCreateManyCardInput[]
    skipDuplicates?: boolean
  }

  export type ClienteUpsertWithoutCardInput = {
    update: XOR<ClienteUpdateWithoutCardInput, ClienteUncheckedUpdateWithoutCardInput>
    create: XOR<ClienteCreateWithoutCardInput, ClienteUncheckedCreateWithoutCardInput>
    where?: ClienteWhereInput
  }

  export type ClienteUpdateToOneWithWhereWithoutCardInput = {
    where?: ClienteWhereInput
    data: XOR<ClienteUpdateWithoutCardInput, ClienteUncheckedUpdateWithoutCardInput>
  }

  export type ClienteUpdateWithoutCardInput = {
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    endereco_estado?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_cidade?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_bairro?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_rua?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_numero?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClienteUncheckedUpdateWithoutCardInput = {
    id_cliente?: IntFieldUpdateOperationsInput | number
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    endereco_estado?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_cidade?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_bairro?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_rua?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_numero?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PrestadorUpsertWithoutCardInput = {
    update: XOR<PrestadorUpdateWithoutCardInput, PrestadorUncheckedUpdateWithoutCardInput>
    create: XOR<PrestadorCreateWithoutCardInput, PrestadorUncheckedCreateWithoutCardInput>
    where?: PrestadorWhereInput
  }

  export type PrestadorUpdateToOneWithWhereWithoutCardInput = {
    where?: PrestadorWhereInput
    data: XOR<PrestadorUpdateWithoutCardInput, PrestadorUncheckedUpdateWithoutCardInput>
  }

  export type PrestadorUpdateWithoutCardInput = {
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    endereco_estado?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_cidade?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_bairro?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_rua?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_numero?: NullableStringFieldUpdateOperationsInput | string | null
    especializacao?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    avaliacao?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Candidatura?: CandidaturaUpdateManyWithoutPrestadorNestedInput
  }

  export type PrestadorUncheckedUpdateWithoutCardInput = {
    id_prestador?: IntFieldUpdateOperationsInput | number
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    endereco_estado?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_cidade?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_bairro?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_rua?: NullableStringFieldUpdateOperationsInput | string | null
    endereco_numero?: NullableStringFieldUpdateOperationsInput | string | null
    especializacao?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    avaliacao?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Candidatura?: CandidaturaUncheckedUpdateManyWithoutPrestadorNestedInput
  }

  export type CandidaturaUpsertWithWhereUniqueWithoutCardInput = {
    where: CandidaturaWhereUniqueInput
    update: XOR<CandidaturaUpdateWithoutCardInput, CandidaturaUncheckedUpdateWithoutCardInput>
    create: XOR<CandidaturaCreateWithoutCardInput, CandidaturaUncheckedCreateWithoutCardInput>
  }

  export type CandidaturaUpdateWithWhereUniqueWithoutCardInput = {
    where: CandidaturaWhereUniqueInput
    data: XOR<CandidaturaUpdateWithoutCardInput, CandidaturaUncheckedUpdateWithoutCardInput>
  }

  export type CandidaturaUpdateManyWithWhereWithoutCardInput = {
    where: CandidaturaScalarWhereInput
    data: XOR<CandidaturaUpdateManyMutationInput, CandidaturaUncheckedUpdateManyWithoutCardInput>
  }

  export type CardCreateManyClienteInput = {
    id_pedido?: string
    id_prestador?: number | null
    categoria: string
    subcategoria: string
    valor: string
    horario_preferencial: string
    valor_negociado?: string | null
    horario_negociado?: string | null
    status?: boolean | null
    codigo_confirmacao?: string | null
    data_finalizacao?: string | null
    status_pedido: string
    cep: string
    street: string
    neighborhood: string
    city: string
    state: string
    number: string
    complement?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CardUpdateWithoutClienteInput = {
    id_pedido?: StringFieldUpdateOperationsInput | string
    categoria?: StringFieldUpdateOperationsInput | string
    subcategoria?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    horario_preferencial?: StringFieldUpdateOperationsInput | string
    valor_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    horario_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    codigo_confirmacao?: NullableStringFieldUpdateOperationsInput | string | null
    data_finalizacao?: NullableStringFieldUpdateOperationsInput | string | null
    status_pedido?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    neighborhood?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    number?: StringFieldUpdateOperationsInput | string
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Prestador?: PrestadorUpdateOneWithoutCardNestedInput
    Candidatura?: CandidaturaUpdateManyWithoutCardNestedInput
  }

  export type CardUncheckedUpdateWithoutClienteInput = {
    id_pedido?: StringFieldUpdateOperationsInput | string
    id_prestador?: NullableIntFieldUpdateOperationsInput | number | null
    categoria?: StringFieldUpdateOperationsInput | string
    subcategoria?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    horario_preferencial?: StringFieldUpdateOperationsInput | string
    valor_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    horario_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    codigo_confirmacao?: NullableStringFieldUpdateOperationsInput | string | null
    data_finalizacao?: NullableStringFieldUpdateOperationsInput | string | null
    status_pedido?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    neighborhood?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    number?: StringFieldUpdateOperationsInput | string
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Candidatura?: CandidaturaUncheckedUpdateManyWithoutCardNestedInput
  }

  export type CardUncheckedUpdateManyWithoutClienteInput = {
    id_pedido?: StringFieldUpdateOperationsInput | string
    id_prestador?: NullableIntFieldUpdateOperationsInput | number | null
    categoria?: StringFieldUpdateOperationsInput | string
    subcategoria?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    horario_preferencial?: StringFieldUpdateOperationsInput | string
    valor_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    horario_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    codigo_confirmacao?: NullableStringFieldUpdateOperationsInput | string | null
    data_finalizacao?: NullableStringFieldUpdateOperationsInput | string | null
    status_pedido?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    neighborhood?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    number?: StringFieldUpdateOperationsInput | string
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CandidaturaCreateManyPrestadorInput = {
    id_candidatura?: number
    id_pedido: string
    valor_negociado?: string | null
    horario_negociado?: string | null
    status?: string | null
    data_candidatura?: Date | string
  }

  export type CardCreateManyPrestadorInput = {
    id_pedido?: string
    id_cliente: number
    categoria: string
    subcategoria: string
    valor: string
    horario_preferencial: string
    valor_negociado?: string | null
    horario_negociado?: string | null
    status?: boolean | null
    codigo_confirmacao?: string | null
    data_finalizacao?: string | null
    status_pedido: string
    cep: string
    street: string
    neighborhood: string
    city: string
    state: string
    number: string
    complement?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CandidaturaUpdateWithoutPrestadorInput = {
    valor_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    horario_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    data_candidatura?: DateTimeFieldUpdateOperationsInput | Date | string
    Card?: CardUpdateOneRequiredWithoutCandidaturaNestedInput
  }

  export type CandidaturaUncheckedUpdateWithoutPrestadorInput = {
    id_candidatura?: IntFieldUpdateOperationsInput | number
    id_pedido?: StringFieldUpdateOperationsInput | string
    valor_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    horario_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    data_candidatura?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CandidaturaUncheckedUpdateManyWithoutPrestadorInput = {
    id_candidatura?: IntFieldUpdateOperationsInput | number
    id_pedido?: StringFieldUpdateOperationsInput | string
    valor_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    horario_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    data_candidatura?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CardUpdateWithoutPrestadorInput = {
    id_pedido?: StringFieldUpdateOperationsInput | string
    categoria?: StringFieldUpdateOperationsInput | string
    subcategoria?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    horario_preferencial?: StringFieldUpdateOperationsInput | string
    valor_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    horario_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    codigo_confirmacao?: NullableStringFieldUpdateOperationsInput | string | null
    data_finalizacao?: NullableStringFieldUpdateOperationsInput | string | null
    status_pedido?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    neighborhood?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    number?: StringFieldUpdateOperationsInput | string
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Cliente?: ClienteUpdateOneRequiredWithoutCardNestedInput
    Candidatura?: CandidaturaUpdateManyWithoutCardNestedInput
  }

  export type CardUncheckedUpdateWithoutPrestadorInput = {
    id_pedido?: StringFieldUpdateOperationsInput | string
    id_cliente?: IntFieldUpdateOperationsInput | number
    categoria?: StringFieldUpdateOperationsInput | string
    subcategoria?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    horario_preferencial?: StringFieldUpdateOperationsInput | string
    valor_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    horario_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    codigo_confirmacao?: NullableStringFieldUpdateOperationsInput | string | null
    data_finalizacao?: NullableStringFieldUpdateOperationsInput | string | null
    status_pedido?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    neighborhood?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    number?: StringFieldUpdateOperationsInput | string
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Candidatura?: CandidaturaUncheckedUpdateManyWithoutCardNestedInput
  }

  export type CardUncheckedUpdateManyWithoutPrestadorInput = {
    id_pedido?: StringFieldUpdateOperationsInput | string
    id_cliente?: IntFieldUpdateOperationsInput | number
    categoria?: StringFieldUpdateOperationsInput | string
    subcategoria?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    horario_preferencial?: StringFieldUpdateOperationsInput | string
    valor_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    horario_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    codigo_confirmacao?: NullableStringFieldUpdateOperationsInput | string | null
    data_finalizacao?: NullableStringFieldUpdateOperationsInput | string | null
    status_pedido?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    neighborhood?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    number?: StringFieldUpdateOperationsInput | string
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CandidaturaCreateManyCardInput = {
    id_candidatura?: number
    prestador_id: number
    valor_negociado?: string | null
    horario_negociado?: string | null
    status?: string | null
    data_candidatura?: Date | string
  }

  export type CandidaturaUpdateWithoutCardInput = {
    valor_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    horario_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    data_candidatura?: DateTimeFieldUpdateOperationsInput | Date | string
    Prestador?: PrestadorUpdateOneRequiredWithoutCandidaturaNestedInput
  }

  export type CandidaturaUncheckedUpdateWithoutCardInput = {
    id_candidatura?: IntFieldUpdateOperationsInput | number
    prestador_id?: IntFieldUpdateOperationsInput | number
    valor_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    horario_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    data_candidatura?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CandidaturaUncheckedUpdateManyWithoutCardInput = {
    id_candidatura?: IntFieldUpdateOperationsInput | number
    prestador_id?: IntFieldUpdateOperationsInput | number
    valor_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    horario_negociado?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    data_candidatura?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}