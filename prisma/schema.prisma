generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Cliente {
  id_cliente      Int      @id @default(autoincrement())
  telefone        String   @db.VarChar(15)
  nome            String   @db.VarChar(100)
  sobrenome       String   @db.VarChar(100)
  cpf             String?  @unique @db.VarChar(14)
  data_nascimento String?
  email           String   @unique @db.VarChar(100)
  password        String // Adicionado para autenticação
  endereco_estado String?  @db.VarChar(50)
  endereco_cidade String?  @db.VarChar(100)
  endereco_bairro String?  @db.VarChar(100)
  endereco_rua    String?  @db.VarChar(100)
  endereco_numero String?  @db.VarChar(10)
  data_cadastro   DateTime @default(now())
  status          String   @default("Ativo") @db.VarChar(50)
  created_at      DateTime @default(now())
  updated_at      DateTime @default(now()) @updatedAt

  Card Card[]
}

model Card {
  id_pedido    String   @id @default(uuid()) // Alterado para usar UUID como identificador
  id_cliente   Int
  id_prestador Int // null ( e quando na tabela candidatura tver um aceito, ai preenche aqui)

  categoria            String
  subcategoria         String
  valor                String
  horario_preferencial String

  codigo_confirmacao String? // esse codigo é para o usuario passar ao prestador
  data_finalizacao   String?
  status_pedido      String // publicado, em andamento, finalizado

  // Campos de endereço
  cep          String
  street       String
  neighborhood String
  city         String
  state        String
  number       String
  complement   String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Cliente Cliente @relation(fields: [id_cliente], references: [id_cliente])

  Candidatura Candidatura[]
}

model Candidatura {
  pedido_id         String   @id @default(uuid()) // ID único e chave primária
  prestador_id      String? // ID do prestador (opcional)
  valor_negociado   String? // Valor negociado (opcional)
  horario_negociado String? // Horário negociado (opcional)
  data_candidatura  DateTime @default(now()) // Data da candidatura com valor padrão
  status            Boolean  @default(false) // Status da candidatura com valor padrão

  // Relacionamento com o modelo Card
  Card Card @relation(fields: [pedido_id], references: [id_pedido])

  @@map("candidaturas") // Nome da tabela no banco de dados
}
